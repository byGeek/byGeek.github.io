<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bygeek&#39;s Playground</title>
  
  
  <link href="https://bygeek.cn/atom.xml" rel="self"/>
  
  <link href="https://bygeek.cn/"/>
  <updated>2022-10-30T14:35:28.931Z</updated>
  <id>https://bygeek.cn/</id>
  
  <author>
    <name>byGeek</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我说宋Plus</title>
    <link href="https://bygeek.cn/2022/10/30/review-on-my-byd-song/"/>
    <id>https://bygeek.cn/2022/10/30/review-on-my-byd-song/</id>
    <published>2022-10-30T10:03:03.000Z</published>
    <updated>2022-10-30T14:35:28.931Z</updated>
    
    <content type="html"><![CDATA[<p>提车一个月，里程1400公里，想着总结下用车一个月来的体验。</p><span id="more"></span><h1 id="等车五个月"><a href="#等车五个月" class="headerlink" title="等车五个月"></a>等车五个月</h1><p>宋Plus DMi等车时间实在是太长了，22年五月2号订车，开始销售说三个月左右（合同直接写车到提车），到9月初一定能提，到国庆后能提，真正拿车是9月30号。等车过程太难受，特别是9月初得到销售肯定答复后却一再推迟，差点换其他车了。不过幸好还是在国庆前提车，而且由于购车补贴在9月30号结束，相当于最后还拿到了街道的补贴，也是不幸中的万幸。</p><img src="/2022/10/30/review-on-my-byd-song/Song-Plus-DMI.JPG" class=""><p>比亚迪今年确实卖的挺火，我还是挺为国产车高兴，买车前我就没有考虑过合资车，试驾只去了比亚迪和吉利店。一个是支持国产，另一个是预算内合资车内饰配置太拉了。况且电动车国内已经弯道超车了，必须支持一把。但是等车时间太长，体验不佳，希望比亚迪产能上来之后能解决这个问题。</p><h1 id="用车数据"><a href="#用车数据" class="headerlink" title="用车数据"></a>用车数据</h1><table><thead><tr><th>item</th><th>data</th></tr></thead><tbody><tr><td>总里程</td><td>1395</td></tr><tr><td>电费</td><td>134.03</td></tr><tr><td>油费</td><td>442*（1-0.33）= 296</td></tr></tbody></table><p>上面的数据是一个月的用车数据。用车情况除去国庆假期，其他基本是通勤，每天60公里。不堵车的情况下几乎全程高速。因为看保养手册前2000公里建议ECO+HEV，且HEV里程占总里程的50%以上，所以我都是按保养手册执行，大概一周充一次电。</p><p>最关心的肯定是用车成本。从比亚迪app查到的数据是累计平均能耗<strong>4.1升/百公里=6.1度+2.2升</strong>，统计的每公里费用<strong>0.26</strong>元。</p><img src="/2022/10/30/review-on-my-byd-song/Gas-station.JPG" class=""><p>我自己估算成本：<strong>油费296 + 电费134 / 1395 = 0.31元/公里</strong>。</p><p>因为目前还是在使用外面的商业充电桩（1.2元/度），后期加装家用装，且增加EV里程比例，应该用车成本还可以降低。</p><h1 id="遇到的“问题”"><a href="#遇到的“问题”" class="headerlink" title="遇到的“问题”"></a>遇到的“问题”</h1><p>提车之后，遇到几个闹心的事情。虽然最后发现都“不是”问题，但是也从侧面反映出比亚迪工作人员专业度还需要提升。</p><h2 id="无法开电尾门？"><a href="#无法开电尾门？" class="headerlink" title="无法开电尾门？"></a>无法开电尾门？</h2><p>一个是发现智能钥匙无法开启有时候无法开启后备箱，进一步发现是在点火状态无法开启后备箱，车辆闪黄灯，但是下车手动可以开启。在车友群里问，大家都可以开启，导致我以为我车子有问题，电话给销售，他让转给售后，售后致电让我去4S点检测。当时心里就很不舒服，以为自己“中奖”了。提车前在懂车帝车友圈看到一些有关宋Plus DMi的问题贴，以至于当时提车的时候专门看了视频教学，如何验车。</p><p>后来确认是正常现象。想来也是，点火状态如果使用智能钥匙开后备箱，这样如果行车过程中钥匙误触，那可能有安全隐患。这个体现了比亚迪售前售后不专业，不能及时解决客户问题。同时车友圈给的信息可能要仔细甄别。</p><p>有个插曲：说来也巧，当天上牌同样碰到一个车友（非比亚迪），当时需要检查后备箱的三脚架和反光背心，也是用钥匙无法开电尾门。正当他很疑惑的时候，我深藏功与名的点了他一句：是不是车子没有熄火？哈哈。</p><h2 id="充电口锁死？"><a href="#充电口锁死？" class="headerlink" title="充电口锁死？"></a>充电口锁死？</h2><p>第一次在商业电桩充电的时候，充电结束，发现充电接口拔不下来。似乎接口被锁死了。求助了现场一些充电的车友，说可能是锁死了。去电特来电客服，答曰是比亚迪的问题。去电比亚迪销售，开锁，重新开关锁，都无法拔出。又是比亚迪售后电话，说要等救援。我…</p><p>还是上网查了一些资料，有人说特来电的充电枪太重且紧，需要提着充电枪上下摇动才可拔出。看来是自己因为是新车不太造次，哈哈。问题解决。欸，比亚迪售后太不专业第二次！</p><h2 id="发动机灯报警？"><a href="#发动机灯报警？" class="headerlink" title="发动机灯报警？"></a>发动机灯报警？</h2><p>点火发现发动机灯告警亮起，偶发现象。查阅了车主手册，手册中说需要尽快联系4S店。我还专门录制视频发给销售，销售让售后联系。没多久售后电话过来问了几个问题。</p><p>“你这个车开了几万公里了？上一次保养是什么时候”<br>“提车没几天，不会真的是发动机有我问题吧？”<br>“你来4s店检测升级一下吧。”<br>“…”</p><p>我当时心里是崩溃的，不会真的中奖了吧？火急火燎开到4S店，售后在忙，等了半个小时，答应帮我先看一下，眼看售后小哥拿着检测仪器来 读取行车数据，扫描一遍发现没有故障。</p><p>“没看到有问题啊”<br>我在等待的时间里，又求助万能的车友群，在群里得到回复是说没有踩刹车启动，导致发动机冷却液告警？<br>看着售后小哥有点迷茫的还在查问题，我试探这问是不是这个问题？小哥说噢，你没踩刹车是会有这样的问题。车子没问题，你开走吧。</p><p>车没问题，当然是好的，但是比亚迪售前售后的体现出来的专业程度让人不敢恭维。仿佛售后遇到问题，第一个告诉你的是你先在4S店升级下吧。当然这里面有很大原因可能是我自己，新手不熟悉，一些常识并不理解等等。</p><h1 id="用车体验"><a href="#用车体验" class="headerlink" title="用车体验"></a>用车体验</h1><p><strong>外观</strong>：我个人还是很喜欢宋的外观的，前网格栅，很霸气，有种大嘴吞噬一切的感觉，虽然是前奥迪总设计师设计的，跟很多奥迪车前脸撞脸。车标为“宋”，很独特的中国风。</p><p><strong>内饰</strong>：没有考虑合资车的一个原因就是内饰太拉了。两田的不管轿车还是SUV，特别是中控这一块，慢慢的老年风格既视感，必须直接PASS。</p><p><strong>智能化</strong>：国产车在这一方面都很有优势。APP远程控制，手机NFC钥匙，外加语音控制，虽然比亚迪车机用的芯片不是目前最强的高通8155，但是实际使用下来，也不卡顿。而且常用的APP预装都有，车机上的高德地图明显感觉比手机版好用！驾驶辅助这些由于我车并没有，此处略过，不过据说ACC自适应巡航效果还不错。</p><p><strong>隔音</strong>：订车前看过相关的评测，宋前面使用的双层夹胶玻璃，隔音效果不错。在纯电模式下，几乎听不到其他噪音。</p><p><strong>娱乐化</strong>: 宋竟然随车还有K歌的麦克风，把车窗一关，可以在车里high歌，这个功能偶尔还是有用的！另外一个对我来说比较重要的是音响效果还可以，经常在上下班路上听歌，多几个喇叭还是有效果的。</p><img src="/2022/10/30/review-on-my-byd-song/KTV.JPG" class=""><p><strong>底盘&amp;滤震</strong>：唯一让我有点不太满意的，要算滤震效果了。在前排，依然能感觉到底盘很硬。通过减速带可以很清晰的感受到滤震效果不佳。</p><p><strong>新车散味</strong>：味道有点大，目前一个月了，停车一天上车还是有些味道，让我不得不在车里使用口罩。</p><p><strong>有关充电</strong>：110km的版本，从20%充满到100%，在快充电桩一个小时即可充满，所以即使无家用桩的情况下，只要家里附近商用桩方便充电，也不会很麻烦。目前一周大概充一次电，下班开到充电站，回家歇一歇，遛完狗，差不多充满了，开回家即可。</p><p>整体上来说，宋Plus DMi在这个价位性价比还是很高。其经济性，空间，外观内饰配置都可圈可点。稍有遗憾的是可惜定的不是高配版本，高配低配相差一万，但是多了很多辅助驾驶相关的feature，我最想要的是ACC自动巡航和座椅通风。当时销售劝说高配等车时间太长，定低配，后来发现高配提车反而更快…</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>目前为止，还是对宋挺满意的，期待宋给自己带来的不仅仅是出行半径的简单拓宽，还有与家人一起参与的未来可能。</p>]]></content>
    
    
    <summary type="html">第一辆车，第一个月总结</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>解决xbox手柄扳机键回弹慢的问题</title>
    <link href="https://bygeek.cn/2021/08/14/how-to-fix-xbox-controller-trigger-key-slow-springback/"/>
    <id>https://bygeek.cn/2021/08/14/how-to-fix-xbox-controller-trigger-key-slow-springback/</id>
    <published>2021-08-14T01:58:51.000Z</published>
    <updated>2021-08-22T06:36:28.411Z</updated>
    
    <content type="html"><![CDATA[<p>xbox one的手柄已经用了三年了，最近明显感觉到扳机键回弹不灵敏了。在万能的B站搜了一波，对着拆机视频搞起来。</p><span id="more"></span><p>在B站找到<a href="https://www.bilibili.com/video/BV1x7411s7s3?from=search&seid=18075264222408655437">这个</a>视频，再次感谢该阿婆主。有点困难的是拆xbox背扣，需要大力出奇迹。上一张正面图</p><p><img src="/2021/08/14/how-to-fix-xbox-controller-trigger-key-slow-springback/xbox-front.JPG"></p><p><img src="/2021/08/14/how-to-fix-xbox-controller-trigger-key-slow-springback/xbox-back.JPG"></p><p>不得不说，xbox做工还是很精良的，特别是经过阿婆主的解说，xbox的按键都是通过立体注塑，特别是西瓜键，是分体键，是由两个组件组合起来的，不是简单的雕刻成型的。</p><p>搞定了拆机之后，发现Xbox的扳机键就是一个弹簧，并没有其他组件！那扳机键是如何感知射击动作，并转化成电信号的呢？</p><p><img src="/2021/08/14/how-to-fix-xbox-controller-trigger-key-slow-springback/xbox-trigger-key.JPG"></p><p>在网上找了一波资料，原来xbox手柄在扳机键使用的霍尔传感器，物理知识已经还给老师的请看下面介绍：</p><blockquote><p>The <strong>Hall effect</strong> is the production of a <a href="https://en.wikipedia.org/wiki/Voltage">voltage</a> difference (the <strong>Hall voltage</strong>) across an <a href="https://en.wikipedia.org/wiki/Electrical_conductor">electrical conductor</a> that is transverse to an <a href="https://en.wikipedia.org/wiki/Electric_current">electric current</a> in the conductor and to an applied <a href="https://en.wikipedia.org/wiki/Magnetic_field">magnetic field</a> perpendicular to the current</p></blockquote><p>简单来说就是载流半导体在磁场中会形成电位差。在xbox手柄的扳机键中下面有一块磁铁，在扣动扳机键时，磁铁与霍尔元器件距离变化，带来磁场变化，再带来电压的变化。</p><p>搞清楚扳机键的工作原理之后，回弹慢的问题就很简单了：1) 弹簧的问题 2) 扳机键缓冲垫老化导致粘滞。把扳机键拆除再扣动，发现弹簧无问题。把扳机键下方的缓冲垫刮除，问题解决。</p><p><img src="/2021/08/14/how-to-fix-xbox-controller-trigger-key-slow-springback/problem-solve.JPG"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;xbox one的手柄已经用了三年了，最近明显感觉到扳机键回弹不灵敏了。在万能的B站搜了一波，对着拆机视频搞起来。&lt;/p&gt;</summary>
    
    
    
    <category term="how-to" scheme="https://bygeek.cn/categories/how-to/"/>
    
    
  </entry>
  
  <entry>
    <title>amazon fire tv 无法安装应用</title>
    <link href="https://bygeek.cn/2021/08/13/fix-amazon-fire-tv-purchase-failure/"/>
    <id>https://bygeek.cn/2021/08/13/fix-amazon-fire-tv-purchase-failure/</id>
    <published>2021-08-13T05:38:12.000Z</published>
    <updated>2021-08-22T06:36:28.411Z</updated>
    
    <content type="html"><![CDATA[<p>在fire tv上绑定美亚账号之后发现，还是无法下载应用。解决办法如下：</p><span id="more"></span><ul><li>确定绑定的是美区账号，在PC上登录亚马逊账号，确认在content-&gt;device preference中设置region未US，同时enable one-click shopping setting</li><li>添加billing address，主要如果绑定了国内信用卡的话，需要将信用卡解绑！然后设置default billing address，地址可以随便在google map上找一个美区地址</li><li>连接wifi的时候，设置advanced，网关地址设置为旁路有地址。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在fire tv上绑定美亚账号之后发现，还是无法下载应用。解决办法如下：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>备案</title>
    <link href="https://bygeek.cn/2021/07/30/beian-note/"/>
    <id>https://bygeek.cn/2021/07/30/beian-note/</id>
    <published>2021-07-30T14:26:27.000Z</published>
    <updated>2021-08-22T06:36:28.411Z</updated>
    
    <content type="html"><![CDATA[<p>国内备案实在太烦了，放弃了，迁外网了。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;国内备案实在太烦了，放弃了，迁外网了。&lt;/p&gt;
</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>家庭影院折腾入门</title>
    <link href="https://bygeek.cn/2021/05/27/build-your-own-media-server/"/>
    <id>https://bygeek.cn/2021/05/27/build-your-own-media-server/</id>
    <published>2021-05-27T13:20:42.000Z</published>
    <updated>2021-05-30T13:08:49.812Z</updated>
    
    <content type="html"><![CDATA[<p>以前旧笔记本装的黑裙基本上只当下载机和文件共享中心。“斥巨资”组了黑裙之后，总想着多多利用起来。群晖上的套件一路折腾过来，踩了一些坑，也有了一些经验，此博文是为记。</p><span id="more"></span><h2 id="过往历程"><a href="#过往历程" class="headerlink" title="过往历程"></a>过往历程</h2><p>其实我的原始需求很简单：在电视上方便的观看下载的视频。在我的旧笔记本的黑裙基本已经可以满足这个需求了。</p><blockquote><p>trasmission BT下载 -&gt; NAS 共享文件夹 -&gt; 电视NPlayer播放视频</p></blockquote><p>这个方案基本不需要额外投入。直到一次黑五，购入了一个14T的硬盘，由于3.5寸盘无法直接用在笔记本上，只能外挂作为移动硬盘，用当然是可以用，但是旧笔记本USB2.0的速度在局域网动辄百兆千兆来说，简直有点侮辱了这块盘。于是有了装机的打算。</p><p>说到装机，还有一段插曲。当时公司正好有一批淘汰的机架式服务器，50块的价格感觉不要太香！抢购之后发现有两个致命缺点：1) 大，奈何家里小  2)噪音大，开机之后直接芜湖起飞。无奈出掉。又看了蜗牛星际和暴风几款矿渣主机，当时价格已经涨上来了，蜗牛星际黄鱼上基本400左右一套可以拿下，暴风主机大概贵一倍的价格。翻来覆去，最终选择了暴风二期，J3145比J1900还是强一些，而且网上对暴风二期的做工评价也不错。</p><p>于是在不想再次斥巨资的情况下，把14T的硬盘置换为了8T硬盘 + 暴风二期。（后来由于硬盘挖矿兴起，大容量硬盘价格被炒的翻倍，14T盘被我卖飞在涨价前夕，这是后话，含泪不表）</p><p>机器到手自然直接上了黑裙，这里踩了一个大坑。黑裙的版本分两个版本，一个是918版本，一个是3617版本。参考网上的教程，开始直接上918版本，因为据说918版本照片人脸识别功能做的更好。但是引导之后出现主机无法获取IP的情况，折腾两个晚上，无法解决，最终只能换3617，3617版本一切顺利。</p><p>后来才发现918版本的固件对暴风二期机子的螃蟹网卡驱动支持不是很完美，会导致机器IP获取慢的问题（需要3~5分钟才能分配到IP）。后来又发现只有918版本的黑裙才支持GPU硬件解码，当然这又是后话，暂且不表。</p><h2 id="我的需求"><a href="#我的需求" class="headerlink" title="我的需求"></a>我的需求</h2><p>群晖上的影音套件有很多，自带的Video Station，Emby， Jellifin， Plex等等。网上看了一些相关的文章，基本上比较推荐Emby和Plex。</p><p>下面是Emby和Plex两个方案试用下来的对比。</p><table><thead><tr><th>需求</th><th>Emby</th><th>Plex</th></tr></thead><tbody><tr><td>可以外挂字幕</td><td>可以自动挂载字幕</td><td>Plex集成自动搜索字幕</td></tr><tr><td>电视客户端，简单好用</td><td>有相应的Emby Android TV客户端</td><td>无TV客户端，但是可以作为KODI的插件，但是KODI反人类的操作界面…</td></tr><tr><td>自动刮削，生成海报墙</td><td>由于墙的原因，MovieDatabase等一些电影元素据的网站需要科学上网访问，但是Emby有相应的开心版docker镜像集成了代理服务器，但是海报墙效果差强人意，优点是nfo数据和海报数据直接保存在本地文件夹</td><td>Plex真正自动刮削，海报墙效果比Emby强不少</td></tr><tr><td>比较方便的外网访问</td><td>反向代理可解决</td><td>同样反向代理可解决，同时Plex登陆时使用HTTPS登录Plex账号，授权成功之后，自动跳转到自建的Plex服务，也就是说自建Plex服务开启HTTP即可，省去HTTPS申请证书等一套繁琐的操作。</td></tr><tr><td>最好免费</td><td>基本功能免费，Premium功能收费，当然有开心版本可白嫖</td><td>Premium功能收费</td></tr><tr><td>转码可有可无，有最好，不是强需求</td><td>有，需Premium会员</td><td>有且不收费</td></tr></tbody></table><p>这里多吐槽下KODI，不知道是不是电视的原因，KODI电视客户端无法安装插件，在路由器全局下科学上网下也无法work，使我不得不放弃KODI作为电视客户端。</p><p>Emby和Plex使用下来，最终我选择两个方案共存。因为Emby的电视客户端使用体验还不错，所以电视上，我使用Emby 来播放视频。在需要使用电脑的情况下，使用浏览器来访问Plex服务。话不多说，上图！</p><p><img src="/2021/05/27/build-your-own-media-server/plex_movie.png"></p><p><img src="/2021/05/27/build-your-own-media-server/plex_tvshow.png"></p><p><img src="/2021/05/27/build-your-own-media-server/plex_movie_intro.png"></p><p><img src="/2021/05/27/build-your-own-media-server/plex_intro.png"></p><h2 id="外网访问"><a href="#外网访问" class="headerlink" title="外网访问"></a>外网访问</h2><p>这里记录下Plex外网访问的方法。说白了就是内网穿透，这里也有两种方法。</p><ol><li>家里宽带有公网IP。这种情况只需要有一个域名即可。甚至不需要自己的域名，借助一些第三方的服务实现DDNS。比如TP路由器直接就提供了TPLINK的DDNS服务。</li><li>没有公网IP。需要有一台云主机，借助FRP来实现内网穿透。但是由于视频需要对VPS的带宽有一定的要求，国内VPS 带宽一般都比较贵，建议直接上国外的VPS，同样价格下带宽大且可以有“其他用途”。</li></ol><p>家里宽带有公网IP，但是由于公网IP一般都封禁了80,443,8080端口，同时公司出口又只放通了80,443,8080端口，所以我无法直接使用方案1。无奈只能通过nginx+frp方案来实现从公司访问到家里的Plex服务。</p><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><p>在自己域名增加一个A记录，指向VPS IP地址，比如</p><p><code>media.bygeek.cn  -&gt; 123.123.123.123</code></p><h3 id="VPS端"><a href="#VPS端" class="headerlink" title="VPS端"></a>VPS端</h3><ol><li>安装frp，可以直接使用docker image</li></ol><p><code>docker pull snowdreamtech/frpc</code></p><p>通过volume挂载配置文件</p><p><code>docker run --restart=always --network host -d -v /etc/frp/frps.ini:/etc/frp/frps.ini --name frps snowdreamtech/frps</code></p><p>本地的frps.ini 配置示例</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7024</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">18080</span></span><br><span class="line"><span class="comment">#vhost_https_port = 443</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7025</span></span><br><span class="line"><span class="attr">privilege_mode</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">privilege_token</span> = your_password_here</span><br></pre></td></tr></table></figure><p>vhost_http_port即为frp server监听并进行http转发的端口</p><ol start="2"><li><p>安装nginx</p><p>nginx的/etc/nginx/nginx.conf示例配置</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  media.bygeek.cn;</span><br><span class="line">        <span class="comment">#root         /usr/share/nginx/html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">          proxy_set_header Host $host;</span><br><span class="line">          proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">          proxy_set_header X-Forwarded-Scheme  $scheme;</span><br><span class="line">          proxy_redirect off;</span><br><span class="line">          proxy_pass http://localhost:18080;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        <span class="attr">location</span> = /<span class="number">404</span>.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        <span class="attr">location</span> = /<span class="number">50</span>x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>nginx会在将访问media.bygeek.cn的80端口的服务proxy到本地的18080端口http服务上去。也就是上文的frps。</p><p>注意location block里面的的proxy_set_header 字段，会将media.bygeek.cn这个host 设置为header送给frps。这个很重要，因为frps会根据custom domain来转发。</p></li></ol><h3 id="NAS端"><a href="#NAS端" class="headerlink" title="NAS端"></a>NAS端</h3><p>同样安装docker 版frp，可以ssh到nas上或者直接在群晖docker 套件中搜索<code>snowdreamtech/frpc</code></p><p>frpc的配置文件示例</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">123.123</span>.<span class="number">123.123</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7024</span></span><br><span class="line"><span class="attr">log_level</span> = info</span><br><span class="line"><span class="attr">authenticate_new_work_conns</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">authenticate_heartbeats</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">token</span> = your_password_here</span><br><span class="line"></span><br><span class="line"><span class="section">[media]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">32400</span></span><br><span class="line"><span class="attr">custom_domains</span> = media.bygeek.cn</span><br></pre></td></tr></table></figure><p>server_addr是安装frps的服务器的地址，也即你的VPS地址</p><p>token跟frps的privilege_token一致</p><p>custom_domains即是上文DNS增加的记录</p><p>local_port是你nas上Plex服务器的端口</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>配置完成之后，即可在外网通过80端口访问内网的Plex服务了，且登录时通过跳转Plex域名完成授权，无需担心安全问题。</p><p><img src="/2021/05/27/build-your-own-media-server/plex_login.png"></p><p>经过实测，VPS的带宽可以满足自动转码下720p的外网流畅播放。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>由于黑裙3617版本不支持硬件解码，在需要转码的情况下CPU的暂用率很高，如果需要充分发挥暴风二期J3145 的GPU 硬解4K的能力，需要安装918固件。而这，是下一次折腾的故事了。</p>]]></content>
    
    
    <summary type="html">利用NAS打造简单的家庭影院</summary>
    
    
    
    <category term="tutorial" scheme="https://bygeek.cn/categories/tutorial/"/>
    
    
    <category term="nas" scheme="https://bygeek.cn/tags/nas/"/>
    
    <category term="HTPC" scheme="https://bygeek.cn/tags/HTPC/"/>
    
  </entry>
  
  <entry>
    <title>大山</title>
    <link href="https://bygeek.cn/2021/01/10/in-memory-of-dashan/"/>
    <id>https://bygeek.cn/2021/01/10/in-memory-of-dashan/</id>
    <published>2021-01-10T03:37:32.000Z</published>
    <updated>2021-05-30T13:08:49.910Z</updated>
    
    <content type="html"><![CDATA[<p>大山是我捡到的一只泰迪。准确的说，是卷子注意到的。</p><span id="more"></span><h2 id="偶遇"><a href="#偶遇" class="headerlink" title="偶遇"></a>偶遇</h2><p>清明假期，在沿山大道骑车，我在前面，拉开距离后没看到卷子跟上来，回去找的时候她正蹲着注视着蜷在一米一外的狗子。狗子浑身沾满了叶子，明显在外面流浪好几天了，累的都走不动了。看着腿还有点瘸。犹豫了一会，我们把狗子放在自行车篮筐里，取消了接下来的行程，准备去宠物医院给狗子做个检查。</p><p>“既然在沿山达到捡到的，就叫他沿山吧”</p><p>“沿山太正式， 就叫大山吧”</p><h2 id="傻狗"><a href="#傻狗" class="headerlink" title="傻狗"></a>傻狗</h2><p>接大山回家之后，没来得及买狗窝，当时把一件旧衣服铺在框里，刚放下，大山就心领神会的爬上去窝着了。一开始大山与我不熟，天天要赖着卷子，娟子躺沙发，大山必要窝在她腿上。看着它尝试着跳上沙发却不得，眼巴巴的望着你，很难不把它抱在怀里。</p><p><img src="/2021/01/10/in-memory-of-dashan/dashan1.JPG"></p><p>大山睡觉的时候老是咧着嘴，让人觉得滑稽的很，“这傻狗”，让你忍不住去抱他。狗确实是一个忠实的伙伴，当你取得它的信任之后，它便会无条件的相信你，有你的地方，便可以睡的安详。</p><p><img src="/2021/01/10/in-memory-of-dashan/dashan2.JPG"></p><p>养狗之后，自己的生活作息也跟着变了。每天至少要遛狗两次，早上一次，晚上一次。早上啥时候出门取决于大山啥时候叫我。哦，对了，忘了说，由于卷子上门早，没时间遛狗，所以我开始照顾大山，大山也和我熟络了起来。大山粘人，晚上睡觉也想在卧室睡，但是我们还是决定让它在狗窝呆着。于是每天早上大山都会不定时的挠门，并可怜的哼唧吸引我们的注意。有的时候半夜三四点被吵醒，开门的一瞬间，它就顺势钻了进来，趴在床下面。我以为它只是要离我们近点，但是等你在床上躺下之后，它出来趴在床沿上跃跃欲试，你这时如果不制止他，它便像是得到了许可一样，一跃上床。</p><p><img src="/2021/01/10/in-memory-of-dashan/dashan6.JPG"></p><p>“欸呀呀，大山昨天还在小区草丛里钻来钻去的…”</p><p>我只得下床，做出怒目圆睁的样子，小声喝斥它，指着狗窝，让它退去。大山也不得趣，只能乖乖回到客厅，脑袋趴在狗窝沿上，用可怜的眼光瞟着我。我得赶紧多睡一会，等待它早上再一次叫我起床。有的时候，大山实在在磨人，我只能当“陪睡”了。</p><p><img src="/2021/01/10/in-memory-of-dashan/dashan7.JPG"></p><p>每次回家，刚从电梯口出来，就听到大山从次卧飞奔到门口的声音。我家的次卧是靠着连廊的，不知道大山在我们出门的时候，是不是都呆在次卧，以便能第一时间收到我们回家的信号。开门的一瞬间，大山便哇哇的边窜边叫，彷佛在哭诉自己独自在家，无人陪伴的苦水。大山太娇小了，腿又不好，它跳起来才勉强碰到我的膝盖，又被弹回摔到地板上，但是它还是执意再次跳着迎接我回家。我心疼它，顾不上吃晚饭，抱着大山出门遛去了。一出单元楼，大山开心极了，跑跳嗅尿，拽着我往前走。想起刚才的那一幕，也不知道它是想我们了，还是想它的自由了。</p><h2 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h2><p>后来工作渐渐忙了起来，卷子也是，大山晚上的吵闹，有点顶不住了。同时由于大山跟我越来越熟，慢慢对卷子充满了敌意。它要守护我和它的地盘。而这个地盘，卷子是不能插足的。有一次卷子从旁边经过，要拿个东西，大山呸了一声，作势要咬人的样子，把卷子给吓坏了。难道大山已经只认我为主人，却忘记了当时是卷子把它捡回来的么？</p><p>不得已，我们考虑将大山送养。开始小区沿街店铺的一个老板表示要收养大山，老板看起来不错，就是可能生意比较忙，担心会没多长时间照顾大山，有点犹豫。后来同小区有个人家也表示的收养的意愿，那人上门来看望大山时，没想到大山很快就跟那边男主人熟悉了起来。我也觉得有些宽慰，大山也算是喜欢那个男主人吧。但是好景不长，那家女主人说有点怕狗，后面又将大山送回来了。后面的事情一波三折，我们送给了那个商铺的老板，有几次远远的在商铺门口经过的时候，看到大山被栓在门口，一动不动，彷佛是等着我接它回家。后面我就不敢从商铺前走过了。</p><p>有一次晚上十点多，我听过有只狗子在外面叫了很久。下楼循声而去，果然是大山，它是自己跑到小区里来了，狗绳子被灌木丛给缠住了。当它看到我来救它，彷佛看到了希望一般，拼命想要挣脱绳子的束缚。当晚我把大山抱回家了。后面我就联系老板说自己养了。大山晚上还是太吵了，跟卷子吵了一架，我知道我可能还要继续给大山寻找一个好主人。</p><p>大山最后被隔壁的M市的一个妹子抱走了，她开车过来接的大山。大山被接走的时候，我给他接上狗绳，可能它还觉得是陪它出去玩吧，还是很兴奋。走到上车的时候，我把它抱给了那个妹子，它好像知道了什么，明白了过来，着急的叫我。我不敢看它，只希望车窗赶紧摇上去…</p><h2 id="后来"><a href="#后来" class="headerlink" title="后来"></a>后来</h2><p>后来有一天，在电梯里遇到一个小女孩。</p><p>“你就是住在X楼的吧？”</p><p>“是啊”</p><p>“上次你家的小狗，还是我给你送回去的哩。那小狗上电梯到了我家门口，一直叫，开门之后它又对着电梯一直叫，闹着要做电梯下去呢，那小狗真聪明。”</p><p>“是吗？哈哈，是啊…”</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;大山是我捡到的一只泰迪。准确的说，是卷子注意到的。&lt;/p&gt;</summary>
    
    
    
    
    <category term="notes" scheme="https://bygeek.cn/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>another normal weekend</title>
    <link href="https://bygeek.cn/2020/07/11/another-normal-day/"/>
    <id>https://bygeek.cn/2020/07/11/another-normal-day/</id>
    <published>2020-07-11T14:34:40.000Z</published>
    <updated>2021-05-30T13:08:49.799Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c311b2ccefbaabd4b33495fe3b1e79bdaba8e07786ebfee428f02cb1c7c20176">59fd7a6a1f42c434984d9088bceb757958dcfc7bd45b1cf0001644c858799d569eafd51d5093c5ea0d82e358c7a299c009ae74705592c26c030da6eabbcaeb6fe99bc168592f24b35c3f3d5e28572af7644791f2f2c82d166fc1ec3b085aaa2a95af757de6031d258a5f4fda17ab375b78fdb5b87b82d1216dc268fd3aa027c2ee6a2a28725d248aa826b5dc3157650edf3d7b585843af84c3e8afe15f128655392e9edf9acd335e1ea887ba72550881071e24b6540c7194c2bd02a242c6330855f8561569dad891c1aadce4616eb4fcc93f09f8e87f2e6dfe0f95ceaf4b330bece15e559434833e8440ffab0ac334691142c9c264519cfaf54f9d90f9184625548ef26b5e5f01b1b190a1b622a646d1b39e1614faf43e618baac22addba4b7b5b6697ff66a26beb2dbf3fec789d49bd9bfa220bd4d79c6365ec307c6ca2a727fae2fc8803eb75feb60f328d147927a0f76a53adfed64452445a4bd3f30987b0ad23966cf4bef75b2bf91a6412e8900822072a9750f99dd11475d995e0aa3f03f1ea1604e0b00a9f5a50764c50e82ebd50e4121b565e0cc41f162ccffc232580caa02deb4da2b1e9ae99049715dc72b55bfa80702620a3df98899b775fa0f6509411da23b29db671b54cd9dc82d11228cce22bea368ea7dab17b4f7833122c8eaea9c152fdcdd8f3e5ca8f49157422f041f13799a3efcbfe821a0970fb249963fd3c8ccdb040b544d1a2ff30bb2c6fd82c350e42f56c0e22bdaa3e236511808f422e7bc1996616e2d00fe2f93c09057083a8819be6ec1e234264d923399561d540a3758d51775afd339475c53b1af174ae40827460cb38846ce03c6dc0a7c674806d03e73be2f0a49da3d3391f6d4b4d0138b117b1d9bbe79a7ed711509860e6818a3c1d6b30b053eba978fa7d7b24339cc5384c92b9b100681a37910b9d6a4efa07f65cfe9d30a5291a67199603d3a34501314f3a753ed9d3937667347765cbcfb0e42dec6235cc50b1665b776f29d178cd340f64564e55250e8e82323e317e126b10d0089a8ca1b8eee517315714b697a3638ccc1f531e6cd5fba3240cab099ac408296f97556738f6a31010122243885b8b84645ee3ce56325050834751001c83cfa34b926d2396c423384b95a55e651f813c53d285d271ae62f6d6e38f85c62c8d3e32868c9994fda2353ffabd4043eadc3a926136207eeb755b7a2b2f13cdca541849730c96d77a93ff8988af057a975801ca921e623fd06874f4cbd4a41ee2228b1e152d49c6a326788d850bdc7b8b4b2d906f12b8f6bbb0e5c3deeb236b36a263164748e15cdd0ea2319b0f476fdd6b525d660972d572cb268700efbd0f68bc0c5f1c3b880a0be3898dce1244314ac39ada241616338fd057d2c85b28a76d91b056ff2c04d4853dffc7ee8e3517305c4a10a47f104281a5c6ac3d92a6b31d9b9bfd4ec21b6e2948f6d1a9035d406d4cca3ff1a3ccaf6916c8af5b88874b215300f0e757b05b230b04cedaf81e7dc7b155eda64908df298a313bbfd84195d48b810fa7563a745f549a29a2615269f33ef837ec55a865a2ae607aaa2597a9a6f84c7d2dac9ef60eed3790dda4309a59f585b4e9477f4f4d5ac8e4e6ec04ce01417e218914ac5fa4392ec67d3542c2b8ab53d7aad16a4e38644d67bf31d7955c7492c83e735a0a032c793833fae9e0912f98b5686bd452df0025edea2f8dbd523c237088419f0c7f07b00604c744c42994a90154864cd47f61329778046021e33174187884956706f4626a299306e393383d9b1d035896cdf7817a3075212b45843c0042908a6190303a5d4db7115483102bd0493f87b776fce0a74e43a2494c8bc4b7c16de3d22d84bfdd2b1eb0ea2675bc2731eb4cad69ab5e0ad32f7d119bbb2ce8615697d4b348a45675e47929f7db86b3495bcb7fe4cf4e15b53c7473736eddefd16ebe2f75717536e54c3c9cc83663b402dd9281fb3ae9d7f80e93f28d44d833a3a3a9b5427ed42c2adf2e64de913fdfbce0d71bfe1f10cd63a71e5ff7301db54b330b13059b26b739a6e034f21ea2c855a495dabe1a3b3e25595fe2e09b4a5dcbae3b8387498e5b112014b61146979bfef43e7c003e25cb7eafc7cf68e98e32e717d89f074e7f0936fc5d9ec096dada0b5fb3df73efe58cd4b94b47e16a587570746739c8c9d01eb7a9efd5b7fc51583e62dd0acf9b10c6d09e6362dc7686ce49c65ce17e3f29c43e4c830c4ac84f5928c9068891644b1dcf3cb13e7de72594fa3b76daeb8b5bbee5f8f5759893ee1974ac773fab0aaa0f7348a1249449b7df24a44535212b348bea63cab59fa158cfe706b87b1bfaa0be3b270d2ad73e32f87520e811b77b637fe0931dc839d7789b6432c704f429760da63b2c30743926a24c8816f4f3dae0645e60afdafc3d9e9ab53a30eb1b850d73d388b2941f0ea833a11203274e7a5f453fd18373a04bbc062d14cbfbbe7d5ac6964e4c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>最后生还者2的玩后感</title>
    <link href="https://bygeek.cn/2020/07/04/Reviews-of-TLUS2/"/>
    <id>https://bygeek.cn/2020/07/04/Reviews-of-TLUS2/</id>
    <published>2020-07-04T11:56:28.000Z</published>
    <updated>2021-05-30T13:08:49.777Z</updated>
    
    <content type="html"><![CDATA[<p>在端午节4天假期中打通了最后生还者2。现在已经过去一周了，闲来无事，写点感受。</p><span id="more"></span><h2 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h2><p>这是我唯一一款参与预售的游戏了。以前都是等等党。这次多多预售就百亿补贴，咱也不得不对生活低头，用上了多多==</p><p>没记错的话，应该是去年通的最后的生还者1（买PS4的时间比较晚），一代确实是一个不可多得的佳作，艾莉这个小蹄子，就爱她满嘴F word。历经千险万难，仿佛自己就是乔尔，艾莉就是自己的女儿一般。</p><p>三月份的跳票之后，当时网上就有剧透出来了，自己一直忍着没看。到19号发售，一直焦急的等待着卖家发货，到端午节当天下午，终于到货。连续肝了30多个小时，好久没有这么畅快的打游戏了。</p><h2 id="玩法"><a href="#玩法" class="headerlink" title="玩法"></a>玩法</h2><p>TLOUS2整个玩法跟1是差不太多的，包括游戏玩法，武器，狙击手剧情等。我印象深刻的就是两个部分，一个是WLF敌对势力中狗的加入。狗的加入确实令我蛋疼，基本每次遇到WLF，如果有狗的话，第一时间都是先把狗杀了，狗扑上来掉血太多。另外一个是疤脸帮中利用口哨来配合，一旦暗杀他们中的一个成员，其他人迅速寻找出事地点，手残如我，经常没有机动的变换位置，死了很多次。而且个人感觉与疤脸帮的战斗场景比一代中的火萤大很多。我个人在一中潜行居多，2的时候经常被发现，之后只能硬肝（技术菜，不是奖杯党）。</p><h2 id="剧情"><a href="#剧情" class="headerlink" title="剧情"></a>剧情</h2><p>剧情是大家喷的最多的地方，基本可以说是两点，一个是乔尔的死，死的太虐，太轻率。另外一个是结局最后艾莉在最后一刻放下太突然，玩家有点接受不能。</p><p>其实我通关下来，到没有这么强烈的感受。可能我不是太死忠粉。首先在玩到乔尔的死的时候，我也很惊异，一作中秒天秒地的乔尔尽然惨死在高尔夫下。但当时我更多想的是编剧在搞什么鬼，我很好奇艾比到底是个什么人，有什么不共戴天之仇。我很着急的想玩下去，看剧情如何发展。</p><p>艾莉线对于我来说，初了玩法上我上述说的两点外，其他对于我来说是乏善可陈的：在复仇的道路上，杀杀人，杀杀感染者，OVER。可能我是一个不太对开放世界感冒的低端玩家，在西雅图那张可以探索的地图上，我就拿了该拿的东西之后，就没有继续探索了。最后西雅图第三天，来到剧院，艾比拿着枪抵着艾莉的头。剧情切换到艾比线。</p><p>艾比线，我一开始是比较抵触的，一方面是艾比这个人物形象，与艾莉反差太大，强壮如牛，个人感觉丝毫没有美感，而且太残暴（虐杀乔尔）。后来才知道原来艾比是一代中火萤组织医生的女儿，心里慢慢理解的艾比。但是艾比反复冒着生命危险去就勒夫两人，感觉和前面艾比人设反差还是太大。到最后我真的想快点打完艾比的剧情，看在剧院和艾莉会发生什么。顺便说下，艾比在医院地下车库和鼠王的BOSS站，紧张刺激的氛围营造还是很成功的。</p><p>回到剧院那场戏，我以为艾比和艾莉对峙的时候，我会操纵艾莉。但是，竟然，我操作的尽然是艾比！操作艾比去狂揍艾莉！这太让我接受不能了。QTE的时候，默默的按键速度慢了下来。</p><p>第二点玩家喷的比价狠的是游戏最后没有给玩家选择，只能放走艾比。</p><p>先不说为何汤米为何在艾莉和蒂娜快乐的生活在小农场里，并育有一女的情况下神经质的要艾莉去复仇。剧情告诉我们的是艾莉在农场的生活并不那么快乐，一直在夜里梦到乔尔的惨死。所以最后又走上了复仇的道路。</p><p>这点其实对于当时正在玩游戏的我来说，似乎我已经潜意识的感觉艾莉怎么这么不懂事，艾比已经放走你两次，你还不能放下心中的仇恨吗？所以如果游戏最后让我选择是否放艾比一条生路，我还是会选择放的。毕竟作为一个玩家，在经历了艾比线之后，我可以知道艾比也是一个可怜人。</p><p>但是后面仔细想想，我作为玩家，是知道艾比的动机的，但是艾莉是不知道的呀。最后在网上看到了一个解释，我觉得给了我觉得艾莉放走艾比的合理性：艾莉在可以给艾比最后一击的时候，闪回她对乔尔说的，我觉得我这辈子都不会原谅你的，但是我仍然愿意试一试。在那一刻，艾莉想到也许现在的艾比就是当初保护她的乔尔，而勒夫就是当时的自己。</p><h2 id="最感动的地方"><a href="#最感动的地方" class="headerlink" title="最感动的地方"></a>最感动的地方</h2><p>游戏中最感动的地方是回忆的片段中乔尔给艾莉过生日，当他们躺在太空舱，艾莉听着乔尔给好不容易搞到的飞船发射的录音，脸上一脸满足，仿佛跟着飞船，最后畅游在太空。乔尔老父亲和天真可爱的艾莉，彷佛又回到了一作的那种温馨，温馨到让人泪目。</p><p>乔尔真的是以一己之力，对艾莉的爱，对抗着全世界。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>最后生还者2远远不是网络上那些谩骂说的那样低劣。剧情是可以喷，但是也要看到顽皮狗在叙事手法上的创新，比如西雅图三天平行世界的叙事手法等等。同时期待下一部好作品。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在端午节4天假期中打通了最后生还者2。现在已经过去一周了，闲来无事，写点感受。&lt;/p&gt;</summary>
    
    
    
    <category term="note" scheme="https://bygeek.cn/categories/note/"/>
    
    
    <category term="game" scheme="https://bygeek.cn/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>关于网站改名</title>
    <link href="https://bygeek.cn/2020/02/25/change-website-title/"/>
    <id>https://bygeek.cn/2020/02/25/change-website-title/</id>
    <published>2020-02-25T11:30:41.000Z</published>
    <updated>2021-05-30T13:08:49.872Z</updated>
    
    <content type="html"><![CDATA[<p>今天收到通知，被告知网站title和备案不一致，需要更改，于是在未将服务迁出之前，本网站改名为”萝卜头的日志”…</p><span id="more"></span><img src="/2020/02/25/change-website-title/Big-Brother-1984.jpg" class="">]]></content>
    
    
    <summary type="html">&lt;p&gt;今天收到通知，被告知网站title和备案不一致，需要更改，于是在未将服务迁出之前，本网站改名为”萝卜头的日志”…&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>2020-new-year</title>
    <link href="https://bygeek.cn/2020/01/31/2020-new-year/"/>
    <id>https://bygeek.cn/2020/01/31/2020-new-year/</id>
    <published>2020-01-31T06:02:32.000Z</published>
    <updated>2021-05-30T13:08:49.769Z</updated>
    
    <content type="html"><![CDATA[<p>2019已经过去，2020已经来临，照例写点东西记录下吧。</p><span id="more"></span><p>看到19年当初定的一些计划，我都有点不太好意思，当初立的一些flag好多都没有做到，以至于今天我都不好再定2020的计划了。那就索性改变一下以前的形式吧。</p><h3 id="回望2019"><a href="#回望2019" class="headerlink" title="回望2019"></a>回望2019</h3><p>19年买了房子，开启了“百万负翁”的生活。以前想的是如何去周游世界，怎样去随性所欲，现在想着从每个月的工资扣掉房贷之后，平平凡凡的生活。这个算是好消息吧。虽然有时累的时候觉得不值，但是晚上睡在自己家的床上的时候，那种温暖还是跟以前不一样的。</p><p>19年8月换了份工作，结束了以前养老的工作。感谢现在的公司，在我换行业的时候，愿意给我一个学习的机会。也感谢上一家公司，可以让我有很多可以自我学习提高的机会。说到换工作的事情，跟买房子也有联系，当每个月的工资抵不上每个月的房贷时，让我不得不跳出自己的舒适圈。至于新的公司，到现在为止，有满意也有不满意的地方。经过几个月的工作，遇到了很多能力很强的同事，意识到了很多自己工作上问题，能力上的不足。我想我会努力的。</p><p>19年打脸最严重的就是跑步了。19年跑量不到500公里。在佳明上定的半马计划也搁置了。自从8月准备换工作到新公司上班之后，锻炼的少了，有那段时间忙碌的托辞，但是更重要的是是自己懒了。</p><p>19年倒是玩了好多游戏。看了下2019年play station的游戏游玩时间统计，花了259个小时在游戏上。</p><img src="/2020/01/31/2020-new-year/game_sumary.jpg" class=""><img src="/2020/01/31/2020-new-year/game_time.jpg" class=""><p>总的来说，可能因为上一份工作比较养老，所以花在游戏上的时间也比较多。而且正如PS有支广告说的，游戏是一种比较好的，花钱又比较少的娱乐活动了，哈哈。</p><h3 id="展望2020"><a href="#展望2020" class="headerlink" title="展望2020"></a>展望2020</h3><p>2020，我希望自己更加自信。在工作上，不仅仅是自己努力，需要多向同事学习，工作方式，沟通，如何解决问题，定时复盘。</p><p>我希望能报名一场半程马拉松比赛，半马应该不是问题，但是我想去赛场感受一下，和众多跑者一起奔跑。</p><p>我希望自己多看书，把自己买的书慢慢消化。</p><p>最重要的，希望自己，家人都身体健康，希望2020越来越好！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;2019已经过去，2020已经来临，照例写点东西记录下吧。&lt;/p&gt;</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>My reviews about Red dead redemption 2</title>
    <link href="https://bygeek.cn/2020/01/30/my-review-on-rdr2/"/>
    <id>https://bygeek.cn/2020/01/30/my-review-on-rdr2/</id>
    <published>2020-01-30T13:07:04.000Z</published>
    <updated>2021-05-30T13:08:49.969Z</updated>
    
    <content type="html"><![CDATA[<p>前几天把荒野大镖客2通关了，今天专门找了下游戏中的原声带听了一下，很有感触，正好闲在家中，看看记录点东西吧。</p><span id="more"></span><p>大表哥这个游戏盘买了很久了，记得当时刚发售的时候，看到一些预告和别人试玩的视频片段，心里痒痒。上次去香港的时候本来打算买块盘，看了看新战神还没开坑，就作罢。后来是看到越来越多的报道，说R星七年磨一剑，于是果断买盘（想着以后还可出二手回血）。</p><p>其实大表哥这种题材的游戏还是蛮合我的胃口的。我个人更倾向于写实的游戏。比如一战，二战题材，以前玩的英雄连，COD二战等。我对一些比较科幻，武器很fancy的不是特别感冒。就玩法来说，我比较喜欢一本道的游戏，比如战神系列，神海系列，对开放世界比较无感，但是塞尔达荒野之息例外。当我玩完大表哥第一章的时候，还是很震撼的。但是到了第二章的时候，发现游戏节奏有点慢，大部分时间都是在骑马跑路，热情大减，于是弃坑了。</p><p>时隔一年，快到春节假期，游戏荒了，趁着周末，拿出大表哥盘，花了两个小时将光盘载入到PS4中。发现战斗系统都生疏了。依旧是骑马跑路，但是随着主线任务的推进，慢慢沉浸到了亚瑟摩根的西部世界中。下面说说在游戏中我印象比较深刻的人。</p><h3 id="亚瑟摩根"><a href="#亚瑟摩根" class="headerlink" title="亚瑟摩根"></a>亚瑟摩根</h3><p>亚瑟12岁被Dutch救了之后，跟随Dutch20多年，脏活苦活，出生入死。他对Dutch是很敬仰的，不管现在的情况多么穷困潦倒，坚定的相信Dutch可以work out a plan。中间被奥觉斯科帮派抓住，折磨，也丝毫没有透露出帮派的信息。每次Dutch计划失败，让大家深陷险境时，亚瑟都是去解决问题的那个人， 对Dutch无条件的信任。即使亚瑟最后发现Dutch是个不折不扣的利己主义者，对自己见死不救，还是希望Dutch可以回心转意。最终那一幕，亚瑟，麦卡，Dutch三人对质，此时的亚瑟已是濒死之人，”I did my best, I did”。不知道Dutch听到这些话是什么感受。</p><h3 id="沙迪艾德勒"><a href="#沙迪艾德勒" class="headerlink" title="沙迪艾德勒"></a>沙迪艾德勒</h3><p>沙迪是里面我最喜欢的一个女角色了。从被奥觉斯科帮派杀了丈夫，被Dutch就下，一直在皮尔逊的厨房打下手，但是她注定是个gunslinger！跟亚瑟出征，巾帼不让须眉。后期更是带领帮派藏身沼泽地，和亚瑟一起突破平克顿侦探的围剿。她应该是价值观最和亚瑟和的来的吧。有勇有谋，率性爽快。最后和马斯顿上雪山，杀迈卡，中枪之后，马斯顿说， “You are dying”, 沙迪果断说，“No, I ain’t! I ain’t‘”。最后反杀迈卡。沙迪是一个很要强的女性，最后成为一个赏金猎人我觉得是对她来说不失为一个很好的结局。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;前几天把荒野大镖客2通关了，今天专门找了下游戏中的原声带听了一下，很有感触，正好闲在家中，看看记录点东西吧。&lt;/p&gt;</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
    <category term="games" scheme="https://bygeek.cn/tags/games/"/>
    
  </entry>
  
  <entry>
    <title>记一次修改联通光猫为桥接模式的经历</title>
    <link href="https://bygeek.cn/2019/08/18/Change-Optical-modem-to-bridge-mode/"/>
    <id>https://bygeek.cn/2019/08/18/Change-Optical-modem-to-bridge-mode/</id>
    <published>2019-08-18T01:38:23.000Z</published>
    <updated>2021-05-30T13:08:49.774Z</updated>
    
    <content type="html"><![CDATA[<p>自从搬家换了宽带移机之后，本来群晖的外网访问就失效了。因为前段时间一直都比较忙，一直没好好解决这个问题。今天终于得闲，把这个问题整好了。以下是我的折腾记录。</p><span id="more"></span><h3 id="公网IP被取消？"><a href="#公网IP被取消？" class="headerlink" title="公网IP被取消？"></a>公网IP被取消？</h3><p>黑裙无法外网访问，首先想到的可能是联通这边不给公网IP了。打开ip138查看出口IP地址，是公网IP。当然这个并不能说明问题，因为这个检测到的只是出口IP，可能家里还是内网IP。</p><p>登录路由器管理界面，在远程管理看到路由器的IP地址为192.168的内网地址。内网IP无疑了。于是联系联通客服，质问为何移机之后的宽带取消了公网IP。一个工作日客服人员答复家里的宽带公网IP并未取消。</p><h3 id="无法ping通"><a href="#无法ping通" class="headerlink" title="无法ping通"></a>无法ping通</h3><p>其实确认有公网IP之后，路由器获取的又是内网地址，如果对网络拓扑和组网有简单的了解之后，已经可以确定可能是光猫的问题了，但是好久不搞这些东西，我已经把计算机网络的一些东西忘了差不多了。真是惭愧。</p><p>言归正传，当时我的想法是，既然我还是有公网IP，那么我试着ping下试试。使用我在腾讯云和GCP上的VPS对家里公网IP进行ping操作，无法ping通，100% package loss。有可能是封禁了ICMP response？</p><p>我又想到可以使用端口扫描工具，对该IP进行端口扫描，看是不是端口被封禁的问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn ip_addr</span><br></pre></td></tr></table></figure><p>找不到open的端口。端口都被封了？</p><h3 id="在群晖设置router-端口转发找到问题"><a href="#在群晖设置router-端口转发找到问题" class="headerlink" title="在群晖设置router 端口转发找到问题"></a>在群晖设置router 端口转发找到问题</h3><p>走投无路的情况下，通过内网，我打开群晖的external access的问题。在重新配置router 端口转发的时候，群晖自检网络时抛出了一个warning：网络里存在多个路由，需要将接入设置为桥接模式。</p><img src="/2019/08/18/Change-Optical-modem-to-bridge-mode/set_up_router.png" class=""><p>感觉找到了一个突破口。我马上找到光猫，开启无线功能，然后连上光猫的无线网之后，登录到web界面。但是发现由于是user用户，找不到修改光猫工作为桥接模式的设置。于是，在google上搜索“光猫 桥接”，找到了简书上的一篇文章： <a href="https://www.jianshu.com/p/0211c56c4945">电信光猫桥接模式的设置</a>。这篇文章也是碰到了外网访问的问题。修改光猫为桥接模式，必须要拿到管理员账户。那怎么搞到光猫的控制台密码呢？</p><h3 id="要到光猫管理员密码"><a href="#要到光猫管理员密码" class="headerlink" title="要到光猫管理员密码"></a>要到光猫管理员密码</h3><p>我直接在google上搜索的光猫的型号：吉比特TEWA 800G。找到一个知乎相关的问题：<a href="https://www.zhihu.com/question/316754462">吉比特TEWA 800G的管理员登录地址是什么？</a>。这个问题虽然没有人回答，但是在问题的描述中我知道了管理员登录的网址。这个光猫的登录界面还做的一个鸡贼的处理：当直接输入光猫的登录地址192.168.1.1时，只能看到普通用户登录的选项，没有管理员账户的登录选项。正好这个知乎问题上说明管理员的登录地址时: <code>192.168.1.1/cu.html</code>。</p><p>接下来就差密码了，我倒是想搜索相关的“破解”方法，不过本着试一试的想法，我直接打电话给装宽带小哥，询问他光猫的管理员的密码之后，没想到宽带小哥直接告诉了我！</p><p>使用管理员密码登录之后，我直接在光猫的快速设置向导中，将路由模式修改为桥接模式。然后在自己的路由器上使用PPPoE拨号。但是无法成功，提示没有连接到互联网。怎么回事呢？</p><h3 id="要到vlan-id"><a href="#要到vlan-id" class="headerlink" title="要到vlan id"></a>要到vlan id</h3><p>我重新看了简书上的<a href="https://www.jianshu.com/p/0211c56c4945">这篇文章</a>，里面说道改成桥接模式之后，需要修改VLAN ID，这个VLAN ID是原来路由模式的VLAN ID。再确认了一下我自家光猫的配合，没有问题，但是就是无法成功拨号。</p><p>无奈之下我再次拨打了宽带小哥的电话。小哥说让我加钱，他上门服务。我说别了吧，我自己弄就好了，不用上门，我请教你几个问题。没想到小哥也同意了。我加了小哥微信，把光猫的VLAN配置发他看了。他询问了我光猫上的一个参数之后，告诉我VLAN ID（这个VLAN ID并不是路由模式的VLAN ID），同时他说需要他在那边“操作一下”。</p><p>看来这个VLAN ID并不是像简书上的文章说的那样，而且需要宽带人员的操作（好像是要解绑什么东西？）。所以遇到问题需要按照实际情况进行分析。</p><p>我填入小哥说的VLAN ID之后，拨号成功！</p><h3 id="外网成功访问"><a href="#外网成功访问" class="headerlink" title="外网成功访问"></a>外网成功访问</h3><p>打开路由器的管理界面，在远程访问中可以看到路由器的IP不再是192.168了，而是公网IP。</p><p>然后在群晖上执行下DDNS脚本，终于搞定了外网访问的问题！</p><h3 id="桥接与VLAN"><a href="#桥接与VLAN" class="headerlink" title="桥接与VLAN"></a>桥接与VLAN</h3><p>其实这件事情很小，而且起初确认公网IP没有取消，路由器获取的是内网IP的时候，当时就应该可以判断是光猫的问题，但是由于还是一些组网知识都忘了，所以走了一些弯路。</p><p>下面在这里贴一下这期间碰到的知识点。</p><blockquote><p>Q: [What’s the difference between a bridge and a switch?(<a href="https://serverfault.com/questions/78184/whats-the-difference-between-a-bridge-and-a-switch">https://serverfault.com/questions/78184/whats-the-difference-between-a-bridge-and-a-switch</a>)</p><p>An ethernet switch is a multiport ethernet bridge. A bridge is a device that splits collision domains but not broadcast domains. A switch is simply a bridge with lots of ports. Other examples of bridges are wireless access points and dual speed hubs. </p></blockquote><blockquote><p>A <strong>virtual LAN</strong> (<strong>VLAN</strong>) is any <a href="https://en.wikipedia.org/wiki/Broadcast_domain">broadcast domain</a> that is <a href="https://en.wikipedia.org/wiki/Network_segmentation">partitioned</a> and isolated in a <a href="https://en.wikipedia.org/wiki/Computer_network">computer network</a> at the <a href="https://en.wikipedia.org/wiki/Data_link_layer">data link layer</a> (<a href="https://en.wikipedia.org/wiki/OSI_model#Layer_2:_Data_Link_Layer">OSI layer 2</a>).[<a href="https://en.wikipedia.org/wiki/Virtual_LAN#cite_note-1">1]</a>[<a href="https://en.wikipedia.org/wiki/Virtual_LAN#cite_note-802.1Q_1.4-2">2]</a> <em>LAN</em> is the abbreviation for <em>local area network</em> and in this context <em>virtual</em> refers to a physical object recreated and altered by additional logic. VLANs work by applying tags to network frames and handling these tags in networking systems – creating the appearance and functionality of <a href="https://en.wikipedia.org/wiki/Network_traffic">network traffic</a> that is physically on a single network but acts as if it is split between separate networks. In this way, VLANs can keep network applications separate despite being connected to the same physical network, and without requiring multiple sets of cabling and networking devices to be deployed.</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;自从搬家换了宽带移机之后，本来群晖的外网访问就失效了。因为前段时间一直都比较忙，一直没好好解决这个问题。今天终于得闲，把这个问题整好了。以下是我的折腾记录。&lt;/p&gt;</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
    <category term="geek" scheme="https://bygeek.cn/tags/geek/"/>
    
  </entry>
  
  <entry>
    <title>ios 13 beta降级到ios 12.3</title>
    <link href="https://bygeek.cn/2019/07/13/downgrade-ios-13-to-ios-12-3/"/>
    <id>https://bygeek.cn/2019/07/13/downgrade-ios-13-to-ios-12-3/</id>
    <published>2019-07-13T15:22:46.000Z</published>
    <updated>2021-05-30T13:08:49.906Z</updated>
    
    <content type="html"><![CDATA[<p>今天手贱把手机的IPhone 6s升级到ios public beta3。谁想到发热严重，app时不时闪退，必须重启才有效。不得已要要降级。本文就当自己今天的作死记录做个小记吧。</p><span id="more"></span><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>我一直时不想当苹果的小白鼠的。Beta在软件上的含义不言而喻。但是实在是不能忍受在IOS 12.3.1短信拦截失效bug又一次复现！国内的垃圾短信太猖獗，我一直是用的“短信拦截”这个APP来拦截垃圾短信，好像是花了6块钱买的吧。我在IOS上使用的收费软件不多。但是升级到IOS 12.3.1版本之后，短信拦截失效了。我还以为是APP出现了问题，后来下载了另一款“熊猫吃短信”发现也无法拦截垃圾短信。在该APP的描述中才知道是IOS系统的bug导致短信无法拦截。</p><p>这个问题以前也出现过，本来拦截正常使用的情况下，在升级某个小版本的正式包之后，出现问题。现在果真BUG OS也越来越坐实了。后来在V2EX论坛上了解到在IOS13以及修正了这个BUG。于是乎，我在使用Itunes备份了数据之后，开启了升级之路。</p><h3 id="IOS-13-PB-BETA-2"><a href="#IOS-13-PB-BETA-2" class="headerlink" title="IOS 13 PB BETA 2"></a>IOS 13 PB BETA 2</h3><p>升级IOS 13 公测版2之后，系统发热严重，我想这可能是刚升级完系统，可能是正常现象，可能多重启几次就能“放凉”。没想到一重启之后，打开应用全部闪退。不得不再次重启，才恢复正常。</p><p>简单体验了下IOS 13，特别是Apple提到的Dark mode，有点新鲜感。Photos界面也重新设计了。短信界面好像变的更拟物化设计了。短信拦截也恢复正常了。但是发热严重。随便打开哪个APP，一会时间，手机就变的好烫，掉电量惊人。上午9点出门，下午3点就没电了，而且中间还开启了省电模式。</p><p>掉电这个还能忍，就是异常发热和APP偶尔闪退忍不了。没办法，只好选择降级。但是，数据咋办？</p><h3 id="降级"><a href="#降级" class="headerlink" title="降级"></a>降级</h3><p>降级一般都是要刷机，而刷机一般都是要抹除数据。幸好在油管上找到降级无损数据的方法。谢天谢地，否则折腾到明天也折腾不完了。</p><p>油管视频：<a href="https://www.youtube.com/watch?v=Ph5MGBeClv8">How to Downgrade iOS 13 to iOS 12! (Without Losing Data)</a></p><p>看视频应该很简单：</p><ol><li>在<a href="https://ipsw.me/">ipsw.me</a>上下载对应的固件，我是下载的IOS 12.3版本，因为12.3.1有短信无法拦截的版本，索性直接降级到12.3版本。幸好苹果还没有关闭12.3的激活通道。</li><li>使用Itunes备份数据。注意请先升级到itunes的最新版本再备份。</li><li>恢复数据。在恢复过程中出现一次白苹果。卡在苹果logo，无进度条显示。以为变砖了，在苹果官网找到进recovery方法，但是幸好在插上数据线之后，iTunes提示升级新版本即可。但是就是这个升级操作，导致后面“虚惊一场”！</li></ol><p>一开始itunes自动升级失败，所以我没在意，直接使用的老版本的itunes做backup，然后再restore的时候itunes提示要升级到最新版才可以restore到12.3。但是在我升级完itunes之后，发现新版的itunes无法找到我的backup记录了！当时感觉心都凉了，数据都没了。后来在查看info.plist文件，在文件结尾有itunes的版本号，怀疑是不是iTunes的版本差异，导致新版的iTunes无法识别使用旧版iTunes backup的文件。所以我在卸载新版itunes，并安装对应的旧版本的时候，终于恢复数据成功。</p><p>在卸载新版iTunes的时候，现在微软也慢慢使用Microsoft store作统一的软件分发平台了。新版的itunes就是在MS Store上下载。在卸载的时候没有在control panel中的卸载中找到itunes，后来是直接在windows上搜索iTunes，右键直接uninstall。</p><p>安装完旧版本的iTunes时，启动会发现提示一个文件由新版本的iTunes创建，导致无法启动成功。解决方法时直接将该文件删除即可。启动iTunes时，会自动创建该文件。安装成功之后，可以找到先前备份的数据。10G的恢复文件大概花了半个小时才恢复成功。</p><h3 id="降级之后"><a href="#降级之后" class="headerlink" title="降级之后"></a>降级之后</h3><p>降级之后，别完了卸载旧的iTunes，重新安装新版iTunes。并且充分备份下数据。最后在iCloud中也备份一份数据。</p><p>最重要的是，千万不要再手贱升级啦！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天手贱把手机的IPhone 6s升级到ios public beta3。谁想到发热严重，app时不时闪退，必须重启才有效。不得已要要降级。本文就当自己今天的作死记录做个小记吧。&lt;/p&gt;</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
    <category term="apple" scheme="https://bygeek.cn/tags/apple/"/>
    
  </entry>
  
  <entry>
    <title>我与游戏的故事(一)</title>
    <link href="https://bygeek.cn/2019/06/03/my-story-with-video-games/"/>
    <id>https://bygeek.cn/2019/06/03/my-story-with-video-games/</id>
    <published>2019-06-03T14:06:26.000Z</published>
    <updated>2021-05-30T13:08:49.970Z</updated>
    
    <content type="html"><![CDATA[<p>买了Play Station已经快两个月了。玩了几款PS4平台的第一方大作之后，是时候来写写自己的感受了。说起买PS4这个经历，其实有点阴差阳错。不过在这之前，我打算先说一下以前我跟游戏的前世今生。</p><span id="more"></span><h3 id="令人怀念的“小霸王”"><a href="#令人怀念的“小霸王”" class="headerlink" title="令人怀念的“小霸王”"></a>令人怀念的“小霸王”</h3><p>作为一枚90后，我小时候接触到的其实是“小霸王”之类的“学习机”，以前并没有红白机之类的概念。可能是中国特殊的国情所致，特别是一些农村的父母，对游戏可是讳莫如深，想正大光明的买游戏机，那几乎是不可能的事。估计也是这个原因，国内的一些厂商将红白机包装为学习机，正好让我有了买“小霸王”的理由。那个时候基本都对父母说是买来“学电脑的”。也确实，当时随机器附带的卡带都是带五笔打字的，我估计应该有很多人对这个场景有印象：一艘艘小船上面是五笔的偏旁部首，只要敲如相应的键就可以将小船击沉。说实话，当时自己还是花了一些时间在“小霸王”上练习五笔打字的，还背诵了偏旁部首的记忆口诀。只可惜，这些打字诀窍最终只停留在了那个学习机上，等我真正接触到电脑，五笔打字早就忘了一干二净了。</p><p>那个时候还是比较痴迷在“小霸王”上的，而且自己还耗费了不少资金在上面。我记得当时一盘“四合一”的卡带要卖8块。那个时候应该大概是2000年左右。要是没记错的话，当时在小学的商店一支雪糕只要5分钱。前前后后应该买了不下20盘卡带。那个时候成绩好，每次基本都是以这个为后盾再加上撒娇，母亲也就顺了我的意。</p><p>想起那段时间，真实觉得很美好。小学放学之后，先把作业写完（那个时候作业应该简单吧，记得每次半个小时就写完了）。然后将“小霸王”接上家里的黑白电视机，拿着卡带在嘴边吹下卡带金手指（似乎这样能防止死机），小心翼翼的摁上去，开机！一个简单的游戏能不亦乐乎的玩上很久。当然了，最后肯定是在母亲一遍遍的催促下最后关了机。</p><p>除了一个人在家里开黑，最大的乐趣就是和村里的小伙伴一起玩了。当时隔壁院子里的一个小伙伴，暂且称之为玲，经常一起玩。印象最深游戏是“热血系列”中的“热血格斗”。这个游戏并不是类似拳皇之类的格斗游戏，而是每局4个人物，你，队友，还有两位对手。你和队友需要在规定时间内击败对手。每一局都是不同的场景，场景还有不同的辅助道具，例如电网，地雷，瀑布等。最后挑战最终的boss——两个带着虎头的对手。首先这个游戏带有一定的随机性（也可能是当时玩的日文版本，看不明白吧），因为每次无法直接选择游戏人物的“招数”，而是通过为人物选择名字，血型，然后系统会分配一个人物给你。可能人物可以有“连环拳”，或者“连环腿”，或者“地雷滚”。其次“热血格斗”场景比较多，每一局的场景设计都很有意思。比如电网那关，当时经常干的伎俩就是讲击倒后的NPC直接扔到电网里，给其造成二次伤害，而且由于击倒后到再起来，有一定的时间差，把握好这个时间差可以无限扔到电网里。还有地雷那关，故意引诱NPC去踩雷，但有的时候被NPC背摔自己去中雷了，哈哈。游戏里还可以跟队友“合体”放大招，变成旋风。由于看不懂日文，我和玲经常要去试看那个人物最厉害，后来还总结出一个“规律”：O型血比较“欧”。“殴”在我的家乡话里是有点类似撒泼比较厉害的意思。我们都觉得很形象。于是默默都给人物选择O型血。但也不总是能选择有“连环拳”或者“连环腿”的人物。</p><p>“热血格斗”卡带是玲的，我没有，于是我经常趁着玲妈不在跟玲一起玩。那个时候基本每个放学的下午，都能在玲的房间里昏天黑地的玩一两个小时。有的时候被玲妈发现我们在房间里背着她玩游戏，我只能尬笑着回家，偷偷约定这明天来我家玩。</p><p>学习机我一共买过两台，一台是在一个打着雷的雨天关机之后就无法再开机了。后来仗着自己成绩好，又让我妈给我买了一台新的。这台新的还带了一把“枪”。可以用来玩一个叫“打鸭子”的游戏。只要指着黑白电视机里的鸭子开枪，就可以将其击落。不过终归没有见到支持这种玩法的游戏了，渐渐的这把“枪”也吃灰了。</p><h3 id="街机"><a href="#街机" class="headerlink" title="街机"></a>街机</h3><p>我记得这个“学习机”一直没坏，只是后来上中学之后，当时慢慢迷上了街机。虽然经常是一个币都不买，但是却可以站在旁边看别人玩一天。当时比较火的几款游戏是恐龙岛和三国战记。看着别人摇杆拍的左来右去，按键拍的啪啪响，感觉自己也浑身充满了”干劲“。没记错的话，一块钱4个币，对于一些老手来说，可以玩一天了。对于我来说，可能四个币也就撑过一两关吧。输了不续币是要重来的，但即使这样，也乐此不疲。因为街机始终玩的很少。一个是费钱，另外就是家人的反对了。可能是街机厅里环境不是很好，有人经常逃学去玩，而且街机厅在家长的眼里就是游戏厅，好歹小霸王还打个掩护叫学习机呢。我妈很反对我去街机厅。一开始是表哥带我去，有一次被我妈发现了，直接冲到街机厅，把我两拎回来了。”你去玩吧，我看你以后有什么出息。“然后也数落其表哥来，后来表哥再也没带我去了。</p><p>我觉得街机当时对我的吸引力主要有三点吧。第一，相比与再黑白电视机上接上小霸王玩，街机的大彩屏简直就是现在的iPhone对于比诺基亚的功能机带来的震撼一样多。第二，街机满足了一定的社交需求。在家还是一个人玩小霸王的时候居多，有的时候我宁愿再与伙伴再通几局魂斗罗或者沙罗曼蛇，也不愿去玩一些角色扮演的”大型游戏“。可能一些角色扮演的游戏剧情多，但是玩游戏嘛还是需要玩伴才玩的开心。街机就不一样的，为什么即使自己不玩也能再游戏厅里呆一天，就是因为有那个氛围在那。投了多少个币，重生多少次之后，终于干倒了别人没干倒的boss，在别人的围观下，next mission！第三点，街机操作的快感。街机加入的摇杆，带来了一种很爽快的体验。那个时候我经常看别人玩，摇杆拍来拍去，特别是玩拳皇这种特别讲究操作的游戏，结合大大的摇杆和大大的按键，更能体验到那种拳拳到肉的感觉，仿佛你按键用多大力气，就能直接传递到游戏人物的打击中一样。</p><p>上面我说的小霸王上的”大游戏“，不仅仅是价格比普通的4合1的游戏贵好几倍，而且卡带也要更大。我记得有两个游戏，一个是角色扮演游戏（当然当时我还不知道），游戏开始掉到山洞里，然后4个人物，到后期可以给每个人选择不同的职业，拥有不同的技能。遗憾的是后来在一个地方卡关了，一块巨石挡在了王宫，然后就过不去了。当时还能玲一起尝试，最后我们一致认为是游戏的bug，再后来就不了了之了。直到我买了PS4之后，才知道原来这个游戏叫最终幻想。</p><p>还有一个游戏是再我玩了塞尔达荒野之息后（这个游戏真是赞誉再多也不为过），再网上看一些游戏视频，发现了一个FC上的游戏，突然发现我玩过，最后也没通关，原因好像是迷宫太多。这个游戏叫塞尔达！</p><p>未完待续！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;买了Play Station已经快两个月了。玩了几款PS4平台的第一方大作之后，是时候来写写自己的感受了。说起买PS4这个经历，其实有点阴差阳错。不过在这之前，我打算先说一下以前我跟游戏的前世今生。&lt;/p&gt;</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
    <category term="games" scheme="https://bygeek.cn/tags/games/"/>
    
  </entry>
  
  <entry>
    <title>windows 开发遇到的一些权限问题</title>
    <link href="https://bygeek.cn/2019/05/15/it-is-all-about-security/"/>
    <id>https://bygeek.cn/2019/05/15/it-is-all-about-security/</id>
    <published>2019-05-15T02:21:39.000Z</published>
    <updated>2021-05-30T13:08:49.964Z</updated>
    
    <content type="html"><![CDATA[<p>最近碰到一个问题，折腾了很久。因为troubleshooting的过程中沟通不畅（种种原因暂且不表），导致像个无头苍蝇一样debug。最后发现是个windows权限的问题。好了，直接说问题。</p><span id="more"></span><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>问题简化为以下代码，是在windows下使用PIPE来进行进程间通信。首先看下server 端代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">message</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">char</span> data[<span class="number">8</span>];</span><br><span class="line">&#125; Message;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">HANDLE h = INVALID_HANDLE_VALUE;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* pipename = <span class="string">&quot;\\\\.\\pipe\\mypipe&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUFSIZE = <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> DEFAULT_TIMEOUT = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">h = CreateNamedPipe(</span><br><span class="line">pipename,</span><br><span class="line">PIPE_ACCESS_DUPLEX,<span class="comment">/*| FILE_FLAG_OVERLAPPED*/</span></span><br><span class="line">PIPE_TYPE_MESSAGE | PIPE_READMODE_MESSAGE,</span><br><span class="line">PIPE_UNLIMITED_INSTANCES,</span><br><span class="line">BUFSIZE,</span><br><span class="line">BUFSIZE,</span><br><span class="line">DEFAULT_TIMEOUT,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (h == INVALID_HANDLE_VALUE) &#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ConnectNamedPipe(h, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">DWORD read = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (ReadFile(h, buf, <span class="keyword">sizeof</span>(Message), &amp;read, <span class="literal">NULL</span>)</span><br><span class="line">&amp;&amp; read == <span class="keyword">sizeof</span>(Message)) &#123;</span><br><span class="line">Message* msg = <span class="keyword">reinterpret_cast</span>&lt;Message*&gt;(buf);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;get message from client: id: %d, data: %s\n&quot;</span>, msg-&gt;id, msg-&gt;data);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ready to echo back!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">DWORD written = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (WriteFile(h, msg, <span class="keyword">sizeof</span>(Message), &amp;written, <span class="literal">NULL</span>)</span><br><span class="line">&amp;&amp; written == <span class="keyword">sizeof</span>(Message)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;echo back completed!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WriteFile failed: %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ReadFile failed: %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ConnectNamedPipe failed: %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CloseHandle(h);</span><br><span class="line"></span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码很简单，使用WIN32 API <code>CreateNamedPipe</code>创建一个命名管道，然后等待pipe client来建立连接。收到client的message之后再echo回去。</p><p>再看下client端代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">HANDLE h = INVALID_HANDLE_VALUE;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* pipename = <span class="string">&quot;\\\\.\\pipe\\mypipe&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUFSIZE = <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> DEFAULT_TIMEOUT = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">h = CreateFile(pipename,</span><br><span class="line">GENERIC_READ | GENERIC_WRITE,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">OPEN_EXISTING,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (h == INVALID_HANDLE_VALUE) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;open pipe failed: %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Message m = &#123; <span class="number">1</span>, <span class="string">&quot;hello&quot;</span> &#125;;</span><br><span class="line">DWORD written = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (WriteFile(h, &amp;m, <span class="keyword">sizeof</span>(Message), &amp;written, <span class="literal">NULL</span>)</span><br><span class="line">&amp;&amp; written == <span class="keyword">sizeof</span>(Message)) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;client write pipe finished\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">DWORD read = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (ReadFile(h, buf, <span class="keyword">sizeof</span>(Message), &amp;read, <span class="literal">NULL</span>)</span><br><span class="line">&amp;&amp; read == <span class="keyword">sizeof</span>(Message)) &#123;</span><br><span class="line">Message* msg = <span class="keyword">reinterpret_cast</span>&lt;Message*&gt;(buf);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;received message: id: %d, data: %s\n&quot;</span>, msg-&gt;id, msg-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;read pipe failed: %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Write Pipe failed: %d\n&quot;</span>, GetLastError());</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CloseHandle(h);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>client代码也很简单，发起pipe connect，之后发送一个简单的message，然后收到server回复后退出。</p><p>但是在实际的生产环境中，发现client端无法连接到server端。根据GetLastError返回值是5，对应的error message是“Access Deny”。那肯定是权限问题嘛。果然，server端是使用Administrator运行的，而client端只有standard user的权限，因为Windows vista中加入的<a href="https://en.wikipedia.org/wiki/Mandatory_Integrity_Control">Mandatory Integrity Control</a>(强制性完整性控制)，导致low integrity level的对象无法modify或者delete high integrity level的对象。</p><h3 id="什么是Integrity-Level"><a href="#什么是Integrity-Level" class="headerlink" title="什么是Integrity Level"></a>什么是Integrity Level</h3><p><a href="https://docs.microsoft.com/en-us/previous-versions/dotnet/articles/bb625957(v=msdn.10)">MSDN</a>上如是说：</p><blockquote><p>The integrity level is a representation of the trustworthiness of running application processes and objects, such as files created by the application. The integrity mechanism provides the ability for resource managers, such as the file system, to use pre-defined policies that block processes of lower integrity, or lower trustworthiness, from reading or modifying objects of higher integrity. The integrity mechanism allows the Windows security model to enforce new access control restrictions that cannot be defined by granting user or group permissions in access control lists (ACLs).</p></blockquote><p>抛开定义，首先先visualize一下Integrity level。我们使用<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer">process explorer</a>工具来查看，如果没有这一栏，可以在View-&gt;Select Columns-&gt;Process Image tab中勾选Integrity level。</p><img src="/2019/05/15/it-is-all-about-security/01_show_integrity_level.png" class=""><p>我们可以看到Integrity level(以下简写为IL)分为几个等级：low, medium, high, system。根据<a href="https://docs.microsoft.com/en-us/windows/desktop/secauthz/mandatory-integrity-control">MSDN</a>:</p><blockquote><p>Windows defines four integrity levels: low, medium, high, and system. Standard users receive medium, elevated users receive high. Processes you start and objects you create receive your integrity level (medium or high) or low if the executable file’s level is low; system services receive system integrity. Objects that lack an integrity label are treated as medium by the operating system; this prevents low-integrity code from modifying unlabeled objects. Additionally, Windows ensures that processes running with a low integrity level cannot obtain access a process which is associated with an app container.</p></blockquote><p>标准用户得到meduim IL，这意味着标准用户启动的程序或创建的内核对象都拥有medium IL，除非在程序或对象中指定其为low IL。特权用户得到high IL。系统服务得到system IL。任何其他没有声明IL 标签的，系统默认其为medium IL。windows系统会保证低IL的对象无法读写/访问高IL的对象。</p><p>摘录一张《windows via c++》第四章最后一节的图：</p><img src="/2019/05/15/it-is-all-about-security/02_integrity_level_example.png" class=""><blockquote><p>When a piece of code tries to access a kernel object, the system compares the integrity level of the<br>calling process with the integrity level associated to the kernel object. If the latter is higher than the<br>former, modify and delete actions are denied. Notice that this comparison is done before checking<br>ACLs. So, even though the process would have the right privileges to access the resource, the fact<br>that it runs with an integrity level lower than the one required by the resource denies the requested<br>access to the object.</p></blockquote><p>简单来说，就是当访问一个内核对象的时候，系统会比较调用进程的IL和与内核对象关联的IL，如果内核对象关联的IL更高，则无法对其进行修改或者删除操作。一般可以进行读操作。</p><p>所以在上面的demo中，由于pipe server使用的是管理员用户运行的，则其创建的PIPE 内核对象拥有high 级别的IL。pipe client 使用标准用户运行，去访问pipe 内核对象时，由于只有medium 级别的IL，所以发生access deny的错误。</p><p>除了在进程间访问内核对象提供保护之外，IL还用在windows 的用户界面中，用于防止low IL的进程去修改high IL的界面。我们知道，windows提供了SendMessage和PostMessage来在窗口之间发送消息。窗体可以根据收到的消息来更新UI等。当一个low IL的进程通过SendMessage、PostMessage、SendInput发送消息给high IL的窗体时，系统会屏幕掉这类消息， 这个时候SendInput会返回0，并且GetLastError也不会显示出异常。这种机制称为<strong>User Interface Privilege Isolation</strong>（UIPI）。</p><p>这里再多说一句，一些杀毒软件，如360安全卫士会主动拦截SendMessage发出的消息。曾经就遇到过bug排查一天，最后发现是这个问题。</p><p>关于详细内容，可以参考《windows via c++》中第四章的内容，中文书名为《windows 核心编程》。</p><h3 id="什么是UAC"><a href="#什么是UAC" class="headerlink" title="什么是UAC"></a>什么是UAC</h3><h3 id="什么事ACL"><a href="#什么事ACL" class="headerlink" title="什么事ACL"></a>什么事ACL</h3><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ul><li><p><a href="%5Bhttps://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd446675(v=ws.10)%5D(https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd446675(v=ws.10))">What’s New in User Account Control</a></p></li><li><p><a href="https://social.technet.microsoft.com/wiki/contents/articles/2275.windows-security-survival-guide.aspx">Windows Security Survival Guide</a></p></li><li><p><a href="https://blogs.technet.microsoft.com/yuridiogenes/2011/04/13/exploring-the-windows-security-survival-guide-integrity/">Exploring the Windows Security Survival Guide – Integrity</a></p></li><li><p><a href="https://docs.microsoft.com/en-us/previous-versions/dotnet/articles/bb625957(v=msdn.10)">What is the Windows Integrity Mechanism?</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近碰到一个问题，折腾了很久。因为troubleshooting的过程中沟通不畅（种种原因暂且不表），导致像个无头苍蝇一样debug。最后发现是个windows权限的问题。好了，直接说问题。&lt;/p&gt;</summary>
    
    
    
    <category term="coding" scheme="https://bygeek.cn/categories/coding/"/>
    
    
    <category term="windows" scheme="https://bygeek.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>使用DebugView来debug</title>
    <link href="https://bygeek.cn/2019/05/10/use-dbgviewer-to-debug-your-code/"/>
    <id>https://bygeek.cn/2019/05/10/use-dbgviewer-to-debug-your-code/</id>
    <published>2019-05-10T06:43:08.000Z</published>
    <updated>2021-05-30T13:08:50.020Z</updated>
    
    <content type="html"><![CDATA[<p>在windows开发的过程中，经常会碰到这样的问题：我们需要记录一些程序的运行期间的信息（log），但是又不想直接记录成log文件保存在用户磁盘上。一般在develop的过程中，我们会将 一些信息直接输入到console或者visual studio中的Output窗口中，但是一旦release给用户之后，我们无法获取这些信息。</p><p>That’s where DebugView COMES IN!</p><span id="more"></span><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/debugview">DebugView</a>原来是sysinternals开发的一系列工具包中的一个，现在早已被MS收购。简单来说，这个工具可以用来显示打印到Debug output windows中的信息。比如使用WIN32 OutputDebugString中的消息在visual studio中可以在output  windows中查看的信息。但是在release build版本中，可以通过DebugView工具查看。</p><blockquote><p><em>DebugView</em> is an application that lets you monitor debug output on your local system, or any computer on the network that you can reach via TCP/IP. It is capable of displaying both kernel-mode and Win32 debug output, so you don’t need a debugger to catch the debug output your applications or device drivers generate, nor do you need to modify your applications or drivers to use non-standard debug output APIs.</p></blockquote><h3 id="DebugView能做的"><a href="#DebugView能做的" class="headerlink" title="DebugView能做的"></a>DebugView能做的</h3><blockquote><p>Under Windows 2000, XP, Server 2003 and Vista <em>DebugView</em> will capture:</p><ul><li>Win32 <strong>OutputDebugString</strong></li><li>Kernel-mode <strong>DbgPrint</strong></li><li>All kernel-mode variants of <strong>DbgPrint</strong> implemented in Windows XP and Server 2003</li></ul><p><em>DebugView</em> also extracts kernel-mode debug output generated before a crash from Window’s 2000/XP crash dump files if <em>DebugView</em> was capturing at the time of the crash.</p></blockquote><p>就是说DebugView可以抓取到程序中的OutputDebugString, DbgPrint等函数调用。在.net中，同样抓取<code>System.Diagnostic.Debug.WriteLine</code>输出的信息。</p><h3 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h3><p>使用DebugView很简单，只需要设置下需要capture的类型，如下图只capture win32 调用OutputDebugString的输出，capture events指的是开始/暂停 捕捉。</p><img src="/2019/05/10/use-dbgviewer-to-debug-your-code/01_set_capture_type.png" class=""><h3 id="使用highlight高亮功能"><a href="#使用highlight高亮功能" class="headerlink" title="使用highlight高亮功能"></a>使用highlight高亮功能</h3><p>log一多久容易迷失方向，使用highlight功能，方便查找含有特定字符串的信息。注意是在include中输入通配符，然后在highlight下输入要包含的关键字，如下图。注意，在include中一般直接输入通配符*，如果想只显示包含特定字符的信息，可以输入关键字，多个关键词已；隔开。</p><h3 id="设置最多显示多少条记录"><a href="#设置最多显示多少条记录" class="headerlink" title="设置最多显示多少条记录"></a>设置最多显示多少条记录</h3><p>如下图，这样在GUI中只会显示最新的500条记录。</p><img src="/2019/05/10/use-dbgviewer-to-debug-your-code/03_maximum_record.png" class=""><h3 id="显示PID"><a href="#显示PID" class="headerlink" title="显示PID"></a>显示PID</h3><p>在option中可以设置是否显示进程的PID，如果勾选，则在每一行中都会显示进程的PID。这个功能可以配合highlight高亮功能，用来关注特定进程的log信息。</p><img src="/2019/05/10/use-dbgviewer-to-debug-your-code/04_use_pid.png" class=""><h3 id="查看帮助文档"><a href="#查看帮助文档" class="headerlink" title="查看帮助文档"></a>查看帮助文档</h3><p>以上只是debugview的简单功能的介绍，详细功能使用可以参考下载包里的帮助文件：dbgview.chm。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在windows开发的过程中，经常会碰到这样的问题：我们需要记录一些程序的运行期间的信息（log），但是又不想直接记录成log文件保存在用户磁盘上。一般在develop的过程中，我们会将 一些信息直接输入到console或者visual studio中的Output窗口中，但是一旦release给用户之后，我们无法获取这些信息。&lt;/p&gt;
&lt;p&gt;That’s where DebugView COMES IN!&lt;/p&gt;</summary>
    
    
    
    <category term="coding" scheme="https://bygeek.cn/categories/coding/"/>
    
    
    <category term="windows" scheme="https://bygeek.cn/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>2019-new-year</title>
    <link href="https://bygeek.cn/2019/02/11/2019-new-year/"/>
    <id>https://bygeek.cn/2019/02/11/2019-new-year/</id>
    <published>2019-02-11T02:17:25.000Z</published>
    <updated>2021-05-30T13:08:49.769Z</updated>
    
    <content type="html"><![CDATA[<p>今天初七，2019年上班第一天。</p><span id="more"></span><p>今年的计划如下：</p><h3 id="减脂"><a href="#减脂" class="headerlink" title="减脂"></a>减脂</h3><p>体重控制在69kg，全年跑量1000km。我知道这个目标其实很弱鸡，如果不出问题，应该可以很轻松的达成。但贵在坚持。坚持跑步，要对得起18年自己买的跑鞋。注意更加科学的跑步，加强自己的核心力量。</p><h3 id="书单"><a href="#书单" class="headerlink" title="书单"></a>书单</h3><p>专业书：</p><ul><li>Windows via C++</li><li>APUE</li><li>Inside the C++ Object Model</li><li>Effective STL</li><li>COM技术内幕-微软组件模型</li></ul><p>非专业书</p><ul><li>二战全史</li><li>尤瓦尔·赫拉利 三部曲：人类简史（看过了觉得还要重新看一遍），未来简史，今日简史</li><li>Kindle上ISIS的崛起</li><li>中央帝国的财政密码（去年未看完）</li></ul><h3 id="人生大事"><a href="#人生大事" class="headerlink" title="人生大事"></a>人生大事</h3><p>打算今年多关注一些房子的信息，多收集收集资料。</p><h3 id="旅游"><a href="#旅游" class="headerlink" title="旅游"></a>旅游</h3><p>暂定东南亚吧，泰国？或者重庆成都也可以，待西乡计划。</p><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p>希望可以通过慢慢参与到开源社区，贡献自己的力量。</p><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><p>关于自己博客的内容，不一定是专业相关的文章，也可以是自己的见闻游记，思考等。</p><p>其他想到在补充吧。</p><p>2019/02/11 于南京</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天初七，2019年上班第一天。&lt;/p&gt;</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
    <category term="plan" scheme="https://bygeek.cn/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>关于神秘海域系列的玩后感</title>
    <link href="https://bygeek.cn/2019/01/31/thoughts-on-Sony-s-Uncharted-series/"/>
    <id>https://bygeek.cn/2019/01/31/thoughts-on-Sony-s-Uncharted-series/</id>
    <published>2019-01-31T05:31:30.000Z</published>
    <updated>2021-05-30T13:08:50.011Z</updated>
    
    <content type="html"><![CDATA[<p>拖延症害死人啊，这篇文章写于一个月之前吧。如今已通关神海3和资料片失落遗产。</p><span id="more"></span><p>—分割线—</p><p>上次打折（2018年圣诞促销）买了神海合集和神海4。</p><p>目前通了神海4，1和2。说下感受吧。</p><p>我先玩的4，画面真的很赞，第一次玩类似的游戏，电影大片即视感，既有点fps还有点揭秘冒险。而且个人觉得枪战，冒险和解谜都恰到好处。诶琳娜真的好美，哈哈。</p><p>后来开始玩合集，神海1感觉一直是突突突，枪战，从神海4画面过来看1的画面还是下降挺多，当然了，神海1是十几年前的老游戏，画面在现在看来也是可以理解。就是打到最后变电室出来怪物有点瘆人，有点像指环王的那个咕噜，死了好多次，把难度调到简单通关。</p><p>之前在论坛看到说神海2不错。果真，从1开始玩2的时候，电影大片即视感，而且射击可以看到子弹轨迹了，手柄反馈比1要好很多。而且剧情好太多，场面也很足，追火车，打飞机，打坦克。不过个人感觉有点不足的是，为啥非要跟1一样最后整出个怪物来？这点我还是比较喜欢4中，更现实一点。</p><p>接下来准备玩3，然后4的dlc。未完待续。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;拖延症害死人啊，这篇文章写于一个月之前吧。如今已通关神海3和资料片失落遗产。&lt;/p&gt;</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
    <category term="game" scheme="https://bygeek.cn/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>2018年回顾</title>
    <link href="https://bygeek.cn/2019/01/07/2018-review/"/>
    <id>https://bygeek.cn/2019/01/07/2018-review/</id>
    <published>2019-01-07T01:54:53.000Z</published>
    <updated>2021-05-30T13:08:49.768Z</updated>
    
    <content type="html"><![CDATA[<p>2019年的元旦都过完好几天了，新年计划还一直没出来。迫于“新年新FLAG”，下面即是新年计划以及对过去一年的回顾。</p><span id="more"></span><p>一一对照下去年的计划吧。</p><blockquote><p>跑步减肥，目标是73KG</p></blockquote><p>今天早上上秤称了一下，正好达到目标。好悬！从8月底办了健身卡督促自己，一直到12月中旬，大概4个月，基本月跑量在130KM左右。自己的体重确实有下降。我也慢慢重新爱上了跑步，隔两天不跑感觉不舒服。单次距离从3K到5K到10K再到21K。10KM配速从6分半提高到5分，同时尝试了两次半马，一次2小时10分，一次1小时55分。总体来说对自己的成绩还是比较满意。但是后来右膝关节有点不舒服，跑步间隔也从一周4跑改成了一周2跑或3跑。</p><p>总的来说，下半年减重还是有效果的，也基本达到了预期，但是后面有所懈怠，当然有部分是膝关节的原因，但是个人主观上也有部分原因。</p><blockquote><p>把博客运行起来。 </p></blockquote><p>当初的计划是一周两篇博客，将自己积累的一些东西，或者遇到的一些问题，想法，记录下来，主要目的是方便自己以后查阅。开始的一两个月，确实保持这个频率更新，后来发现整理笔记成博客挺耗时间的，一般自己整理在onenote上的笔记，都是专业技术文章的剪贴，格式凌乱，自己看懂就行。一些文章要理出成自己的文字还是需要一定的时间。二来慢慢的以前的积累也慢慢消耗了。所以后来博文基本都已最近遇到问题或者看到的资料为基础。</p><p>本来博客是托管在Github上，后来趁着腾讯云搞活动，买了3年的云主机，就迁移到了腾讯云上。期间购买了域名并进行了网站备案。总的来说，这个Flag实现的还算合格吧。</p><blockquote><p>看书，专业书和自己买的两本社科书。</p></blockquote><p>这里先列下去年计划书单。</p><table><thead><tr><th>书名</th><th>完成情况</th><th>备注</th></tr></thead><tbody><tr><td>操作系统：精髓与设计原理</td><td>GOOD</td><td></td></tr><tr><td>深入理解操作系统（CSAPP）</td><td>NG</td><td>读完上一本书，发现CSAPP这本书受到推崇更多，于是又买了这本，但是没看了，估计以后这本书作为工具书查阅吧</td></tr><tr><td>程序员的自我修养–链接，装载与库</td><td>GOOD</td><td></td></tr><tr><td>C++ Primer</td><td>GOOD</td><td></td></tr><tr><td>Effective C++</td><td>GOOD</td><td>看的电子版，但是值得经常查阅，反复看</td></tr><tr><td>Effective Modern C++</td><td>ALMOST GOOD</td><td>看了大半部分，还未看完</td></tr><tr><td>COM技术内幕–微软组件对象模型</td><td>NG</td><td>未看完，看了开头</td></tr><tr><td>Inside the C++ Object Model</td><td>ALMOST GOOD</td><td>Lippman出的一本小册子，英文版，共180多页6个chapter，看了4个，算看完了大部分吧</td></tr><tr><td>深入理解Nginx</td><td>NG</td><td>看了部分，这本书当时还是跟前端的书一起买的，一直没看，后来为了折腾VPS的时候，以及阅读Nginx源码看了部分。</td></tr><tr><td>Docker入门实战</td><td>NG</td><td>看了部分</td></tr><tr><td></td><td></td><td></td></tr><tr><td>GEB</td><td>NG</td><td>当初在StackOverflow看到很多人推荐这本书，就买了，看了一章就没咋看了</td></tr><tr><td>货币金融学</td><td>NG</td><td>看了部分，金融学确实比较难啊</td></tr></tbody></table><p>去年大概是下半年才开始看专业书的。因为项目的原因，阅读了几本C++方面以及操作系统相关的书籍。好多书都是看了部分，然后因为各种各样的原因没有完整阅读完毕。</p><blockquote><p>开发一个能上线的小程序/app，或者有自己的一个开源项目。</p></blockquote><p>这个算是做的比较失败了。小程序和APP没影，就是Github上有自己的几个Toy Project，都是简单的自己学习C++写的代码。发现这个还是比较难坚持下去，动力有点不足。</p><blockquote><p>去一趟香港</p></blockquote><p>在12月份的时候去了一趟。这个也是准备了好久的事，期间从办居住证，护照，通行证，拖了很长时间。整体去香港的感受一般，住宿，交通，吃饭都挺贵的。有时间写篇博文记录下吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;2019年的元旦都过完好几天了，新年计划还一直没出来。迫于“新年新FLAG”，下面即是新年计划以及对过去一年的回顾。&lt;/p&gt;</summary>
    
    
    
    <category term="notes" scheme="https://bygeek.cn/categories/notes/"/>
    
    
    <category term="plan" scheme="https://bygeek.cn/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>关于正则表达式的简单总结</title>
    <link href="https://bygeek.cn/2018/12/18/personal-summary-on-regular-expression/"/>
    <id>https://bygeek.cn/2018/12/18/personal-summary-on-regular-expression/</id>
    <published>2018-12-18T08:03:31.000Z</published>
    <updated>2021-05-30T13:08:49.982Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录一下正则表达式的一些语法和常见用法。以备后查。</p><p>在线regex测试网站推荐<a href="https://regex101.com/">regex101</a>。</p><p>有关regex的资料推荐: </p><ul><li><a href="https://www.regular-expressions.info/quickstart.html">regular-expressions.info</a></li><li><a href="http://www.runoob.com/regexp/regexp-metachar.html">runoob.com</a></li></ul><span id="more"></span><h2 id="基础概念语法"><a href="#基础概念语法" class="headerlink" title="基础概念语法"></a>基础概念语法</h2><h3 id="Text-patterns-and-Matches"><a href="#Text-patterns-and-Matches" class="headerlink" title="Text patterns and Matches"></a>Text patterns and Matches</h3><p>pattern表示一个规则。在本文中将正则表达式的Text pattern使用<code>/</code>包裹起来。如<code>/cat/</code></p><h3 id="Literal-Characters"><a href="#Literal-Characters" class="headerlink" title="Literal Characters"></a>Literal Characters</h3><p>字面量字符，最普通的一种情况。比如<code>/cat/</code>, 输入字符串<code>he catch a catfish for his cat.</code> 在字符串的第4个位置找到匹配。</p><p>如果想继续匹配。则需要设置为全局模式。<code>/cat/g</code>，则会对输入字符串进行全局搜索。</p><p>在正则表达式中有12个字符有着特殊的含义，分别是：</p><blockquote><p>the backslash <code>\</code>, the caret <code>^</code>, the dollar sign <code>$</code>, the period or dot <code>.</code>, the vertical bar or pipe symbol <code>|</code>, the question mark <code>?</code>, the asterisk or star <code>*</code>, the plus sign <code>+</code>, the opening parenthesis <code>(</code>, the closing parenthesis <code>)</code>, the opening square bracket <code>[</code>, and the opening curly brace <code>&#123;</code></p></blockquote><p>它们也叫做<code>metacharacters</code>。这些字符如果想被当成普通字符使用，需要使用<code>\</code>进行转译。如如果你想匹配<code>1+1=2</code>，你需要的Text pattern是<code>/1\+1=2/</code></p><h3 id="Character-Classes-or-Character-Sets"><a href="#Character-Classes-or-Character-Sets" class="headerlink" title="Character Classes or Character Sets"></a>Character Classes or Character Sets</h3><p>Character Class 只能在几个字符中匹配到其中一个。比如<code>/gr[ae]y/</code>可以匹配<code>gray</code>, <code>grey</code>, 但不能匹配<code>graey</code>。可以使用hyphen（连字符-）来表示一个候选范围，如<code>/[0-9]/</code>可匹配一个数字。<code>/[a-zA-Z]/</code>可用来匹配<code>bH</code>, <code>cD</code>等。也可以单字符和连字符一起使用，如<code>/[x0-9]/</code>用来匹配字符<code>x</code>或<code>0-9</code>的数字。</p><p>在方括号里使用<code>^</code>用来表示取否。如<code>/[^abc]/</code>可匹配非a非b非c的字符，<code>/[^ ]/</code>可匹配非空格（blank space）的字符。</p><h3 id="Shorthand-Character-Classes"><a href="#Shorthand-Character-Classes" class="headerlink" title="Shorthand Character Classes"></a>Shorthand Character Classes</h3><p>正则表达式提供了一些更简便的方式（Shorthand）来匹配一些常用的字符串。注意，这些shorthand具体包含的字符跟不同的regex flavour有关。不同的flavour可能还有其他的一些shorthand。这里讲一些通用的shorhand放在下表中。</p><table><thead><tr><th>Shorthand</th><th>Equals</th><th>Match</th></tr></thead><tbody><tr><td>\d</td><td>[0-9]</td><td>digit: 0-9的数字</td></tr><tr><td>\w</td><td>[a-zA-Z0-9_]</td><td>Word character: 用于组成单词的字符，下划线和数字</td></tr><tr><td>\s</td><td>[ \t\r\n\f]</td><td>Whitespace ：空格，tab，换行符, form feed</td></tr></tbody></table><p>Shorthand也可以有shorthand。一般用大写字母来表示取否。</p><table><thead><tr><th>Negated Shorthand</th><th>Equals</th></tr></thead><tbody><tr><td>\D</td><td>[^\d]</td></tr><tr><td>\W</td><td>[^\w]</td></tr><tr><td>\S</td><td>[^\s]</td></tr></tbody></table><p>在中括号中使用Negated Shorthand需要注意。如<code>[\D\S]</code>与<code>[^\d\s]</code>表达的含义不一样。<code>[^\d\s]</code>用来匹配即不是White space又不是数字的字符，而<code>[\D\S]</code>两个条件（\D或\S）满足一个即可匹配，换句话说，<code>[\D\S]</code>可以匹配数字，whitespace或者其他字符。这里面涉及的是逻辑上与或非关系。</p><p>可以在<a href="https://regex101.com/">regex101</a>上进行在线测试每个shorthand代表的简写。</p><img src="/2018/12/18/personal-summary-on-regular-expression/regex101.png" class=""><h3 id="Non-Printable-Characters"><a href="#Non-Printable-Characters" class="headerlink" title="Non-Printable Characters"></a>Non-Printable Characters</h3><p>在正则表达式中可以使用特殊字符来匹配不可打印字符。</p><table><thead><tr><th>pattern</th><th>match</th><th>pattern</th><th>match</th></tr></thead><tbody><tr><td>\t</td><td>tab字符（ASCII 0x09）</td><td>\r</td><td>carriage return(0x0D)</td></tr><tr><td>\n</td><td>line feed(0x0A)</td><td>\f</td><td>form feed(0x0C)</td></tr></tbody></table><p>需要注意的是，在windows上使用<code>\r\n</code>来用作line break, 而unix上是<code>\n</code>.</p><h3 id="The-Dot-matches-Almost-any-character"><a href="#The-Dot-matches-Almost-any-character" class="headerlink" title="The Dot matches (Almost) any character"></a>The Dot matches (Almost) any character</h3><p><code>.</code>可以匹配除了line break之外的所有字符。如<code>/gr.y/</code>可以匹配<code>gray</code>, <code>grey</code>, <code>/gr%y</code>. 谨慎的使用dot 字符。因为使用Character class匹配的速度回更快也更精确.</p><h3 id="Anchors"><a href="#Anchors" class="headerlink" title="Anchors"></a>Anchors</h3><blockquote><p>Anchors do not match any characters. They match a position.</p></blockquote><p>Anchors（锚）用来匹配一个位置。<code>^</code>用于匹配输入字符串的开始位置，<code>$</code>用于匹配输入字符串的结束位置。在<code>multi-line</code>模式下，<code>^</code>用来匹配每一行的开始位置，<code>$</code>用来匹配每一行的结束位置。如<code>/^a/</code>可以匹配<code>abc</code>中的a，但是再<code>bca</code>中找不到匹配。</p><p><code>\b</code>用来匹配word boundary。</p><blockquote><p>A word boundary is a position between a character that can be matched by <code>\w</code> and a character that cannot be matched by <code>\w</code></p></blockquote><p><code>\B</code>正好相反，用来匹配<code>\b</code>无法匹配的地方。</p><p>更多的内容相关请参考: <a href="https://www.regular-expressions.info/anchors.html">Learn more about anchors</a>.</p><h3 id="Alternation"><a href="#Alternation" class="headerlink" title="Alternation"></a>Alternation</h3><p>Alternation相当于正则表达式中的”或”。如<code>/cat|dog/</code>匹配<code>cat and dogs</code>中的<code>cat</code>,如果再次匹配（如使用global模式），才会再次匹配到<code>dog</code>.</p><p>Alternation在正则表达式中的操作符中优先级最低。如<code>cat|dog food</code>可以用来匹配<code>cat</code>或者<code>dog food</code>。如果想要匹配<code>cat food</code>或者<code>dog food</code>，需要使用捕获组<code>(cat|dog)food</code>.</p><h3 id="Repetition"><a href="#Repetition" class="headerlink" title="Repetition"></a>Repetition</h3><ul><li><p>quantifier <code>?</code>用来使得前面的token最多可以出现一次（0次或一次）。如<code>colou?r</code>匹配<code>colour</code>或<code>color</code> .</p></li><li><p>quantifier <code>*</code>用来使得前面的token出现0次，一次，或多次。</p></li><li><p>quentifier <code>+</code>用来使得前面的token至少出现一次（一次或多次）。</p></li><li><p>使用大括号<code>&#123;&#125;</code>用来表示前面的token出现特定次数。如<code>/\b[1-9][0-9]&#123;3&#125;\b/</code>匹配<code>1000-9999</code>的数字.</p></li></ul><p><code>/\b[1-9][0-9]&#123;2,4&#125;\b/</code>匹配100-9999.</p><h3 id="Greedy-and-Lazy-Repetition"><a href="#Greedy-and-Lazy-Repetition" class="headerlink" title="Greedy and Lazy Repetition"></a>Greedy and Lazy Repetition</h3><p>Repetition的匹配符都是“贪婪”的，他们会尽可能多的匹配，返回尽可能长的匹配字符串。如<code>/&lt;.+&gt;/</code>在输入字符串为<code>This is a &lt;EM&gt;first&lt;/EM&gt; test</code>中返回的匹配字符串为<code>&lt;EM&gt;first&lt;/EM&gt;</code>。</p><p>在<code>+</code>之后使用<code>?</code>使得匹配变为lazy. 使用<code>/&lt;.+?&gt;/</code>来匹配上面的字符串，则返回的是<code>&lt;EM&gt;</code>.</p><p>更好的方式是使用dot 运算符。</p><blockquote><p>Use <code>&lt;[^&lt;&gt;]+&gt;</code> to quickly match an HTML tag without regard to attributes. The negated character class is more specific than the dot, which helps the regex engine find matches quickly.</p></blockquote><h3 id="Grouping-and-Capturing"><a href="#Grouping-and-Capturing" class="headerlink" title="Grouping and Capturing"></a>Grouping and Capturing</h3><p>使用<code>()</code>来对多个字符进行分组，可以使用repetition运算符来修饰分组。如<code>/set(value)?/ 可以匹配</code>set<code>或</code>setvalue`.</p><p>使用小括号分组即创建了一个捕获组。上面的例子有一个分组，如果匹配set，则group1什么都没有，如果匹配setvalue，则group1是<code>value</code>。group0总是整个匹配的字符串。至于如何访问group，这个跟你使用的编程语言有关。</p><p>创建捕获组之后，可以使用backreference来引用捕获组。backreference即使用backslash和group number来表示捕获组的内容。</p><p>如<code>/([abc])=\1/</code>可以匹配<code>a=a</code>,或<code>b=b</code>，或<code>c=c</code></p><p>如果你只想分组不想创建捕获组可以使用<code>(？:)?</code>。如上面的例子，<code>set(?:value)?</code>, 这样只会创建分组，但不会创建捕获组。这样做的目的可以使得正则表达式匹配更快，性能更高。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文记录一下正则表达式的一些语法和常见用法。以备后查。&lt;/p&gt;
&lt;p&gt;在线regex测试网站推荐&lt;a href=&quot;https://regex101.com/&quot;&gt;regex101&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;有关regex的资料推荐: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.regular-expressions.info/quickstart.html&quot;&gt;regular-expressions.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.runoob.com/regexp/regexp-metachar.html&quot;&gt;runoob.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="coding" scheme="https://bygeek.cn/categories/coding/"/>
    
    
    <category term="regex" scheme="https://bygeek.cn/tags/regex/"/>
    
  </entry>
  
</feed>
